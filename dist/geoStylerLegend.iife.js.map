{"version":3,"file":"geoStylerLegend.iife.js","sources":["../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/asserts.js","../node_modules/ol/transform.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/math.js","../node_modules/ol/proj.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/geom/LineString.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/ImageState.js","../node_modules/ol/has.js","../node_modules/ol/dom.js","../node_modules/color-space/rgb.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/color-name/index.js","../node_modules/color-parse/index.js","../node_modules/color-space/hsl.js","../node_modules/color-rgba/index.js","../node_modules/ol/color.js","../node_modules/ol/Image.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/colorlike.js","../node_modules/ol/render/canvas.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/geostyler-style/dist/typeguards.js","../node_modules/css-font-parser/dist/css-font-parser.modern.js","../node_modules/ol/size.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/style/Icon.js","../node_modules/geostyler-openlayers-parser/dist/Util/colors.js","../node_modules/geostyler-openlayers-parser/dist/Util/OlStyleUtil.js","../node_modules/ol/render.js","../node_modules/geostyler-openlayers-parser/dist/OlStyleParser.js","../node_modules/ol/Feature.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/array.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/selectChild.js","../node_modules/d3-selection/src/selection/selectChildren.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/join.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/iterator.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/select.js","../src/LegendRenderer/AbstractOutput.ts","../src/LegendRenderer/SvgOutput.ts","../src/LegendRenderer/PngOutput.ts","../src/LegendRenderer/LegendRenderer.ts"],"sourcesContent":["/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * Contains typeguards for geostyler-style\n * https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards\n */\nfunction isString(str) {\n    if (str != null && typeof str.valueOf() === 'string') {\n        return true;\n    }\n    return false;\n}\n;\nfunction isNumber(num) {\n    if (num != null && typeof num.valueOf() === 'number') {\n        return true;\n    }\n    return false;\n}\nfunction isBoolean(bool) {\n    if (bool != null && typeof bool.valueOf() === 'boolean') {\n        return true;\n    }\n    return false;\n}\n;\nexport const isExpression = (got) => {\n    return isGeoStylerFunction(got) || isPropertyType(got);\n};\n/**\n * @deprecated use isFunction instead\n */\nexport const isFunctionCall = (got) => {\n    return got.type === 'functioncall' &&\n        got.hasOwnProperty('name') &&\n        isString(got.name) &&\n        got.hasOwnProperty('args') &&\n        Array.isArray(got.args) &&\n        got.args.every((arg) => isExpression(arg));\n};\n// PropertyValue\nexport const isPropertyType = (got) => {\n    return isString(got) || isNumber(got) || isBoolean(got) || got === null;\n};\n// ScaleDenominator\nexport const isScaleDenominator = (got) => {\n    return !!((got?.min || got?.max) &&\n        ((!!got.min) ? isGeoStylerNumberFunction(got.min) || isNumber(got.min) : true) &&\n        ((!!got.max) ? isGeoStylerNumberFunction(got.max) || isNumber(got.min) : true));\n};\n// Operators\nexport const isOperator = (got) => {\n    return isComparisonOperator(got) ||\n        isCombinationOperator(got) ||\n        isNegationOperator(got);\n};\nexport const isComparisonOperator = (got) => {\n    return ['==', '*=', '!=', '<', '<=', '>', '>=', '<=x<='].includes(got);\n};\nexport const isCombinationOperator = (got) => {\n    return ['&&', '||'].includes(got);\n};\nexport const isNegationOperator = (got) => {\n    return got === '!';\n};\n// Filters\nexport const isFilter = (got) => {\n    return isComparisonFilter(got) ||\n        isCombinationFilter(got) ||\n        isGeoStylerBooleanFunction(got) ||\n        isNegationFilter(got) ||\n        isGeoStylerBooleanFunction(got) ||\n        isBoolean(got);\n};\nexport const isComparisonFilter = (got) => {\n    const expectedLength = got && got[0] === '<=x<=' ? 4 : 3;\n    return (Array.isArray(got) &&\n        got.length === expectedLength &&\n        isComparisonOperator(got[0]) &&\n        isExpression(got[1]) &&\n        isExpression(got[2]) &&\n        (got[0] !== '<=x<=' || isNumber(got[3])));\n};\nexport const isCombinationFilter = (got) => {\n    return Array.isArray(got) &&\n        got.length >= 3 &&\n        isCombinationOperator(got[0]) &&\n        got.every((arg, index) => index === 0 || isFilter(arg));\n};\nexport const isNegationFilter = (got) => {\n    return Array.isArray(got) &&\n        got.length === 2 &&\n        isNegationOperator(got[0]) &&\n        isFilter(got[1]);\n};\n// Symbolizers\nexport const isSymbolizer = (got) => {\n    return isPointSymbolizer(got) ||\n        isLineSymbolizer(got) ||\n        isFillSymbolizer(got) ||\n        isRasterSymbolizer(got);\n};\nexport const isPointSymbolizer = (got) => {\n    return isIconSymbolizer(got) || isMarkSymbolizer(got) || isTextSymbolizer(got);\n};\nexport const isIconSymbolizer = (got) => {\n    return got?.kind === 'Icon';\n};\nexport const isTextSymbolizer = (got) => {\n    return got?.kind === 'Text';\n};\nexport const isMarkSymbolizer = (got) => {\n    return got?.kind === 'Mark' && isString(got?.wellKnownName);\n};\nexport const isLineSymbolizer = (got) => {\n    return got?.kind === 'Line';\n};\nexport const isFillSymbolizer = (got) => {\n    return got?.kind === 'Fill';\n};\nexport const isRasterSymbolizer = (got) => {\n    return got?.kind === 'Raster';\n};\n// Rule\nexport const isRule = (got) => {\n    return !!(isString(got?.name) &&\n        (got?.filter ? isFilter(got.filter) : true) &&\n        (got?.scaleDenominator ? isScaleDenominator(got.scaleDenominator) : true) &&\n        got?.symbolizers?.every((arg) => isSymbolizer(arg)));\n};\n/**\n * Checks if ChannelSelection is of type RGBChannel.\n */\nexport const isRgbChannel = (got) => {\n    return !!(got?.redChannel !== undefined\n        || got?.greenChannel !== undefined\n        || got?.blueChannel !== undefined);\n};\n/**\n * Checks if ChannelSelection is of type GrayChannel.\n */\nexport const isGrayChannel = (got) => {\n    return !!(got?.grayChannel !== undefined);\n};\n// Functions\nexport const isGeoStylerNumberFunction = (got) => {\n    const functionNames = [\n        'abs',\n        'acos',\n        'add',\n        'asin',\n        'atan',\n        'atan2',\n        'ceil',\n        'cos',\n        'div',\n        'exp',\n        'floor',\n        'interpolate',\n        'log',\n        'max',\n        'min',\n        'modulo',\n        'mul',\n        'pi',\n        'pow',\n        'random',\n        'rint',\n        'round',\n        'sin',\n        'sqrt',\n        'strIndexOf',\n        'strLastIndexOf',\n        'strLength',\n        'sub',\n        'tan',\n        'toDegrees',\n        'toNumber',\n        'toRadians'\n    ];\n    return functionNames.includes(got?.name);\n};\nexport const isGeoStylerStringFunction = (got) => {\n    const functionNames = [\n        'numberFormat',\n        'strAbbreviate',\n        'strCapitalize',\n        'strConcat',\n        'strDefaultIfBlank',\n        'strReplace',\n        'strStripAccents',\n        'strSubstring',\n        'strSubstringStart',\n        'strToLowerCase',\n        'strToString',\n        'strToUpperCase',\n        'strTrim'\n    ];\n    return functionNames.includes(got?.name);\n};\nexport const isGeoStylerBooleanFunction = (got) => {\n    const functionNames = [\n        'all',\n        'any',\n        'between',\n        'double2bool',\n        'equalTo',\n        'greaterThan',\n        'greaterThanOrEqualTo',\n        'in',\n        'lessThan',\n        'lessThanOrEqualTo',\n        'not',\n        'notEqualTo',\n        'parseBoolean',\n        'strEndsWith',\n        'strEqualsIgnoreCase',\n        'strMatches',\n        'strStartsWith'\n    ];\n    return functionNames.includes(got?.name);\n};\nexport const isGeoStylerUnknownFunction = (got) => {\n    const functionNames = [\n        'case',\n        'property',\n        'step'\n    ];\n    return functionNames.includes(got?.name);\n};\nexport const isGeoStylerFunction = (got) => {\n    return isGeoStylerBooleanFunction(got) ||\n        isGeoStylerNumberFunction(got) ||\n        isGeoStylerStringFunction(got) ||\n        isGeoStylerUnknownFunction(got);\n};\nexport const isSprite = (got) => {\n    return typeof got?.source === 'string' || isGeoStylerFunction(got?.source) &&\n        Array.isArray(got.position) &&\n        Array.isArray(got.size);\n};\n//# sourceMappingURL=typeguards.js.map","function e(e){return!/^(-?\\d|--)/.test(e)}function t(t){const l=[];let n=\"\",s=\"\",f=7;for(let i,r=0;i=t.charAt(r);r++)if(/[a-zA-Z\\d\\xa0-\\uffff_-]/.test(i)&&7===f)n+=i;else if(\"\\\\\"===i&&7===f)f=6;else if(\" \"===i&&7===f){if(\"\"!==n){if(!e(n))return null;l.push(n),n=\"\"}}else if(6===f)/[0-9a-f]/i.test(i)?(s+=i,f=8):(n+=i,f=7);else{if(8!==f)return null;/[0-9a-f]/i.test(i)&&s.length<6?s+=i:(n+=String.fromCodePoint(parseInt(s,16)),n+=i,s=\"\",f=7)}if(\"\"!==n){if(!e(n))return null;l.push(n)}return l.join(\" \")}function l(e,l){let n=l,s=\"\";const f={\"font-family\":[]};for(let l,i=0;l=e.charAt(i);i+=1)if(4!==n||'\"'!==l&&\"'\"!==l)if(3===n&&\",\"===l)n=4,s=\"\";else if(4===n&&\",\"===l){const e=t(s);e&&f[\"font-family\"].push(e),s=\"\"}else if(5===n&&\" \"===l)/^(?:\\+|-)?(?:[0-9]*\\.)?[0-9]+(?:deg|grad|rad|turn)$/.test(s)?(f[\"font-style\"]+=\" \"+s,s=\"\"):i-=1,n=1;else if(1!==n||\" \"!==l&&\"/\"!==l)2===n&&\" \"===l?(/^(?:\\+|-)?([0-9]*\\.)?[0-9]+(?:em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc|%)?$/.test(s)&&(f[\"line-height\"]=s),n=4,s=\"\"):s+=l;else{if(/^(?:(?:xx|x)-large|(?:xx|s)-small|small|large|medium)$/.test(s)||/^(?:larg|small)er$/.test(s)||/^(?:\\+|-)?(?:[0-9]*\\.)?[0-9]+(?:em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc|%)$/.test(s))n=\"/\"===l?2:4,f[\"font-size\"]=s;else if(/^italic$/.test(s))f[\"font-style\"]=s;else if(/^oblique$/.test(s))f[\"font-style\"]=s,n=5;else if(/^small-caps$/.test(s))f[\"font-variant\"]=s;else if(/^(?:bold(?:er)?|lighter|normal)$/.test(s))f[\"font-weight\"]=s;else if(/^[+-]?(?:[0-9]*\\.)?[0-9]+(?:e[+-]?(?:0|[1-9][0-9]*))?$/.test(s)){const e=parseFloat(s);e>=1&&e<=1e3&&(f[\"font-weight\"]=s)}else/^(?:(?:ultra|extra|semi)-)?(?:condensed|expanded)$/.test(s)&&(f[\"font-stretch\"]=s);s=\"\"}else{let t=i+1;do{if(t=e.indexOf(l,t)+1,!t)return null}while(\"\\\\\"===e.charAt(t-2));f[\"font-family\"].push(e.slice(i+1,t-1).replace(/\\\\('|\")/g,\"$1\")),i=t-1,n=3,s=\"\"}if(3===n&&!/^\\s*$/.test(s))return null;if(4===n){const e=t(s);e&&f[\"font-family\"].push(e)}return f}function n(e){const t=l(e,4);return null!==t?t[\"font-family\"]:null}function s(e){const t=l(e,1);return null!==t&&t[\"font-size\"]&&t[\"font-family\"].length?t:null}export{s as parseFont,n as parseFontFamily};\n//# sourceMappingURL=css-font-parser.modern.js.map\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * This is a copy of https://github.com/colorjs/color-name/blob/master/index.js.\n * To reduce dependencies and avoid to include a \"module\" package this simple copy\n * is used instead of the package itself.\n */\nexport const colors = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n};\n//# sourceMappingURL=colors.js.map","import { isGeoStylerBooleanFunction, isGeoStylerFunction, isGeoStylerNumberFunction, isGeoStylerStringFunction, isGeoStylerUnknownFunction } from 'geostyler-style/dist/typeguards';\nimport { colors } from './colors';\nconst WELLKNOWNNAME_TTF_REGEXP = /^ttf:\\/\\/(.+)#(.+)$/;\nexport const DUMMY_MARK_SYMBOLIZER_FONT = 'geostyler-mark-symbolizer';\n/**\n * Offers some utility functions to work with OpenLayers Styles.\n */\nclass OlStyleUtil {\n    /**\n     * Transforms a HEX encoded color and an opacity value to a RGB(A) notation.\n     *\n     * @param colorString HEX encoded color\n     * @param opacity  Opacity (Betweeen 0 and 1)\n     * @return the RGB(A) value of the input color\n     */\n    static getRgbaColor(colorString, opacity) {\n        if (isGeoStylerStringFunction(colorString)) {\n            colorString = OlStyleUtil.evaluateStringFunction(colorString);\n        }\n        if (typeof (colorString) !== 'string') {\n            return;\n        }\n        if (colorString.startsWith('rgba(')) {\n            return colorString;\n        }\n        // check if is valid HEX color - see also here\n        // https://stackoverflow.com/questions/8027423/how-to-check-if-a-string-is-a-valid-hex-color-representation/8027444\n        const isHexColor = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(colorString);\n        if (!isHexColor) {\n            return;\n        }\n        const r = parseInt(colorString.slice(1, 3), 16);\n        const g = parseInt(colorString.slice(3, 5), 16);\n        const b = parseInt(colorString.slice(5, 7), 16);\n        if (isGeoStylerNumberFunction(opacity)) {\n            opacity = OlStyleUtil.evaluateNumberFunction(opacity);\n        }\n        if (opacity < 0) {\n            opacity = 1;\n        }\n        return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + opacity + ')';\n    }\n    /**\n     * Splits a RGBA encoded color into its color values.\n     *\n     * @param {string} rgbaColor RGB(A) encoded color\n     * @return {number[]} Numeric color values as array\n     */\n    static splitRgbaColor(rgbaColor) {\n        const colorsOnly = rgbaColor.substring(rgbaColor.indexOf('(') + 1, rgbaColor.lastIndexOf(')')).split(/,\\s*/);\n        const red = parseInt(colorsOnly[0], 10);\n        const green = parseInt(colorsOnly[1], 10);\n        const blue = parseInt(colorsOnly[2], 10);\n        const opacity = parseFloat(colorsOnly[3]);\n        return [red, green, blue, opacity];\n    }\n    /**\n     * Transforms a RGB(A) or named color value to a HEX encoded notation.\n     * If a HEX color is provided it will be returned untransformed.\n     *\n     * @param {string} inColor The color to transform\n     * @return {string | undefined} The HEX color representation of the given color\n     */\n    static getHexColor(inColor) {\n        // if passing in a hex code we just return it\n        if (inColor.startsWith('#')) {\n            return inColor;\n        }\n        else if (inColor.startsWith('rgb')) {\n            const colorArr = OlStyleUtil.splitRgbaColor(inColor);\n            return OlStyleUtil.getHexCodeFromRgbArray(colorArr);\n        }\n        else if (colors[inColor.toLocaleLowerCase()] !== undefined) {\n            const rgbColorArr = colors[inColor.toLocaleLowerCase()];\n            return OlStyleUtil.getHexCodeFromRgbArray(rgbColorArr);\n        }\n        else {\n            return;\n        }\n    }\n    /**\n     * Returns the hex code for a given RGB(A) array.\n     *\n     * @param colorArr RGB(A) array. e.g. [255,0,0]\n     * @return {string} The HEX color representation of the given color\n     */\n    static getHexCodeFromRgbArray(colorArr) {\n        return '#' + colorArr.map((x, idx) => {\n            const hex = x.toString(16);\n            // skip opacity if passed as fourth entry\n            if (idx < 3) {\n                return hex.length === 1 ? '0' + hex : hex;\n            }\n            return '';\n        }).join('');\n    }\n    /**\n     * Returns the opacity value of a RGB(A) color value.\n     *\n     * @param rgbaColor RGBA encoded color\n     * @return {string | undefined} The opacity value of the given RGBA color\n     */\n    static getOpacity(rgbaColor) {\n        if (!rgbaColor.startsWith('rgba(')) {\n            return;\n        }\n        const colorArr = OlStyleUtil.splitRgbaColor(rgbaColor);\n        if (colorArr.length === 4) {\n            return colorArr[3];\n        }\n        else {\n            return;\n        }\n    }\n    /**\n     * Returns an OL compliant font string.\n     *\n     * @param symbolizer The TextSymbolizer to derive the font string from\n     */\n    static getTextFont(symbolizer) {\n        const fontWeight = symbolizer.fontWeight ?? 'normal';\n        const fontStyle = symbolizer.fontStyle ?? 'normal';\n        const size = symbolizer.size;\n        const font = symbolizer.font;\n        return fontWeight + ' ' + fontStyle + ' ' + size + 'px ' + font?.join(', ');\n    }\n    /**\n     * Returns true if the given mark symbolizer is based on a font glyph\n     * (i.e. has a well known name property starting with 'ttf://').\n     *\n     * @param symbolizer The TextSymbolizer to derive the font string from\n     */\n    static getIsFontGlyphBased(symbolizer) {\n        return WELLKNOWNNAME_TTF_REGEXP.test(symbolizer.wellKnownName);\n    }\n    /**\n     * Returns whether the given font (as used in the OpenLayers Text Style `font` property)\n     * is intended for a mark symbolizer or not.\n     * This is done by checking whether the dummy DUMMY_MARK_SYMBOLIZER_FONT font name is present.\n     *\n     * @param font The text font to analyze\n     */\n    static getIsMarkSymbolizerFont(font) {\n        if (!font) {\n            return false;\n        }\n        const search = DUMMY_MARK_SYMBOLIZER_FONT;\n        return font.substring(font.length - search.length, font.length) === search;\n    }\n    /**\n     * Returns an OL compliant font string, to be used for mark symbolizers\n     * using a font glyph.\n     * This also includes a dummy DUMMY_MARK_SYMBOLIZER_FONT font name at the end of the\n     * string to allow determining that this font was intended for a mark symbolizer\n     * later on.\n     *\n     * @param symbolizer The TextSymbolizer to derive the font string from\n     */\n    static getTextFontForMarkSymbolizer(symbolizer) {\n        const parts = symbolizer.wellKnownName.match(WELLKNOWNNAME_TTF_REGEXP);\n        if (!parts) {\n            throw new Error(`Could not parse font-based well known name: ${symbolizer.wellKnownName}`);\n        }\n        const fontFamily = parts[1];\n        return `Normal ${symbolizer.radius || 5}px '${fontFamily}', ${DUMMY_MARK_SYMBOLIZER_FONT}`;\n    }\n    /**\n     * Returns a 1-char string to be used as text for mark symbolizers using a font glyph.\n     *\n     * @param symbolizer The MarkSymbolizer to derive the character string from\n     */\n    static getCharacterForMarkSymbolizer(symbolizer) {\n        const parts = symbolizer.wellKnownName.match(WELLKNOWNNAME_TTF_REGEXP);\n        if (!parts) {\n            throw new Error(`Could not parse font-based well known name: ${symbolizer.wellKnownName}`);\n        }\n        return String.fromCharCode(parseInt(parts[2], 16));\n    }\n    /**\n     * Returns the font name used in the OpenLayers text style `font` property.\n     *\n     * @param olFont the `font` property of an OpenLayers text style\n     */\n    static getFontNameFromOlFont(olFont) {\n        const parts = olFont.match(/(?:\\d+\\S+) '?\"?([^,'\"]+)/);\n        if (!parts) {\n            throw new Error(`Could not find font family name in the following string: ${olFont}`);\n        }\n        return parts[1];\n    }\n    /**\n     * Returns the size in pixels specified in the OpenLayers text style `font` property,\n     * or 0 if not found.\n     *\n     * @param olFont the `font` property of an OpenLayers text style\n     */\n    static getSizeFromOlFont(olFont) {\n        const parts = olFont.match(/(?:(\\d+)px)/);\n        return parts ? parseInt(parts[1], 10) : 0;\n    }\n    /**\n     * Resolves the given template string with the given feature attributes, e.g.\n     * the template \"Size of area is {{AREA_SIZE}} km²\" would be to resolved\n     * to \"Size of area is 1909 km²\" (assuming the feature's attribute AREA_SIZE\n     * really exists).\n     *\n     * @param feature The feature to get the attributes from.\n     * @param template The template string to resolve.\n     * @param [noValueFoundText] The text to apply, if the templated value\n     *   could not be found, default is to 'n.v.'.\n     * @param [valueAdjust] A method that will be called with each\n     *   key/value match, we'll use what this function returns for the actual\n     *   replacement. Optional, defaults to a function which will return the raw\n     *   value it received. This can be used for last minute adjustments before\n     *   replacing happens, e.g. to filter out falsy values or to do number\n     *   formatting and such.\n     * @return The resolved template string.\n     */\n    static resolveAttributeTemplate(feature, template, noValueFoundText = 'n.v.', valueAdjust = (key, val) => val) {\n        let attributeTemplatePrefix = '\\\\{\\\\{';\n        let attributeTemplateSuffix = '\\\\}\\\\}';\n        // Find any character between two braces (including the braces in the result)\n        let regExp = new RegExp(attributeTemplatePrefix + '(.*?)' + attributeTemplateSuffix, 'g');\n        let regExpRes = template.match(regExp);\n        // If we have a regex result, it means we found a placeholder in the\n        // template and have to replace the placeholder with its appropriate value.\n        if (regExpRes) {\n            // Iterate over all regex match results and find the proper attribute\n            // for the given placeholder, finally set the desired value to the hover.\n            // field text\n            regExpRes.forEach(res => {\n                // We count every non matching candidate. If this count is equal to\n                // the objects length, we assume that there is no match at all and\n                // set the output value to the value of \"noValueFoundText\".\n                let noMatchCnt = 0;\n                for (let [key, value] of Object.entries(feature.getProperties())) {\n                    // Remove the suffixes and find the matching attribute column.\n                    let attributeName = res.slice(2, res.length - 2);\n                    if (attributeName.toLowerCase() === key.toLowerCase()) {\n                        template = template.replace(res, valueAdjust(key, value));\n                        break;\n                    }\n                    else {\n                        noMatchCnt++;\n                    }\n                }\n                // No key match found for this feature (e.g. if key not\n                // present or value is null).\n                if (noMatchCnt === Object.keys(feature.getProperties()).length) {\n                    template = template.replace(res, noValueFoundText);\n                }\n            });\n        }\n        return template;\n    }\n    static evaluateFunction(func, feature) {\n        if (func.name === 'property') {\n            if (!feature) {\n                throw new Error(`Could not evalute 'property' function. Feature ${feature} is not defined.`);\n            }\n            if (isGeoStylerStringFunction(func.args[0])) {\n                return feature?.get(OlStyleUtil.evaluateStringFunction(func.args[0], feature));\n            }\n            else {\n                return feature?.get(func.args[0]);\n            }\n        }\n        if (isGeoStylerUnknownFunction(func)) {\n            return OlStyleUtil.evaluateUnknownFunction(func, feature);\n        }\n        if (isGeoStylerStringFunction(func)) {\n            return OlStyleUtil.evaluateStringFunction(func, feature);\n        }\n        if (isGeoStylerNumberFunction(func)) {\n            return OlStyleUtil.evaluateNumberFunction(func, feature);\n        }\n        if (isGeoStylerBooleanFunction(func)) {\n            return OlStyleUtil.evaluateBooleanFunction(func, feature);\n        }\n        return;\n    }\n    static evaluateBooleanFunction(func, feature) {\n        const args = func.args.map(arg => {\n            if (isGeoStylerFunction(arg)) {\n                return OlStyleUtil.evaluateFunction(arg, feature);\n            }\n            return arg;\n        });\n        switch (func.name) {\n            case 'all':\n                return args.map(arg => this.evaluateBooleanFunction(arg, feature))\n                    .every(result => result === true);\n            case 'any':\n                return args.map(arg => this.evaluateBooleanFunction(arg, feature))\n                    .some(result => result === true);\n            case 'between':\n                return args[0] >= args[1] && args[0] <= args[2];\n            case 'double2bool':\n                // TODO: evaluate this correctly\n                return false;\n            case 'equalTo':\n                return args[0] === args[1];\n            case 'greaterThan':\n                return args[0] > args[1];\n            case 'greaterThanOrEqualTo':\n                return args[0] >= args[1];\n            case 'in':\n                return args.slice(1).includes(args[0]);\n            case 'lessThan':\n                return args[0] < args[1];\n            case 'lessThanOrEqualTo':\n                return args[0] <= args[1];\n            case 'not':\n                return !args[0];\n            case 'notEqualTo':\n                return args[0] !== args[1];\n            case 'parseBoolean':\n                return !!args[0];\n            case 'strEndsWith':\n                return args[0].endsWith(args[1]);\n            case 'strEqualsIgnoreCase':\n                return args[0].toLowerCase() === args[1].toLowerCase();\n            case 'strMatches':\n                const regEx = args[1];\n                const regexArray = regEx.match(/\\/(.*?)\\/([gimy]{0,4})$/);\n                if (regexArray && regexArray.length === 3) {\n                    return new RegExp(regexArray[1], regexArray[2]).test(args[0]);\n                }\n                else {\n                    return false;\n                }\n            case 'strStartsWith':\n                return args[0].startsWith(args[1]);\n            default:\n                return false;\n        }\n    }\n    static evaluateNumberFunction(func, feature) {\n        if (func.name === 'pi') {\n            return Math.PI;\n        }\n        if (func.name === 'random') {\n            return Math.random();\n        }\n        const args = func.args.map(arg => {\n            if (isGeoStylerFunction(arg)) {\n                return OlStyleUtil.evaluateFunction(arg, feature);\n            }\n            return arg;\n        });\n        switch (func.name) {\n            case 'abs':\n                return Math.abs(args[0]);\n            case 'acos':\n                return Math.acos(args[0]);\n            case 'add':\n                return args[0] + args[1];\n            case 'asin':\n                return Math.asin(args[0]);\n            case 'atan':\n                return Math.atan(args[0]);\n            case 'atan2':\n                // TODO: evaluate this correctly\n                return args[0];\n            case 'ceil':\n                return Math.ceil(args[0]);\n            case 'cos':\n                return Math.cos(args[0]);\n            case 'div':\n                return args[0] / args[1];\n            case 'exp':\n                return Math.exp(args[0]);\n            case 'floor':\n                return Math.floor(args[0]);\n            case 'log':\n                return Math.log(args[0]);\n            case 'max':\n                return Math.max(...args);\n            case 'min':\n                return Math.min(...args);\n            case 'modulo':\n                return args[0] % args[1];\n            case 'mul':\n                return args[0] * args[1];\n            case 'pow':\n                return Math.pow(args[0], args[1]);\n            case 'rint':\n                // TODO: evaluate this correctly\n                return args[0];\n            case 'round':\n                return Math.round(args[0]);\n            case 'sin':\n                return Math.sin(args[0]);\n            case 'sqrt':\n                return Math.sqrt(args[0]);\n            case 'strIndexOf':\n                return args[0].indexOf(args[1]);\n            case 'strLastIndexOf':\n                return args[0].lastIndexOf(args[1]);\n            case 'strLength':\n                return args[0].length;\n            case 'sub':\n                return args[0] - args[1];\n            case 'tan':\n                return Math.tan(args[0]);\n            case 'toDegrees':\n                return args[0] * (180 / Math.PI);\n            case 'toRadians':\n                return args[0] * (Math.PI / 180);\n            default:\n                return args[0];\n        }\n    }\n    static evaluateUnknownFunction(func, feature) {\n        const args = func.args.map(arg => {\n            if (isGeoStylerFunction(arg)) {\n                return OlStyleUtil.evaluateFunction(arg, feature);\n            }\n            return arg;\n        });\n        switch (func.name) {\n            case 'property':\n                return feature?.get(args[0]);\n            case 'case':\n                const caseArgs = args;\n                let match;\n                for (let index = 0; index < caseArgs.length; index++) {\n                    const caseArg = caseArgs[index];\n                    // last arg of the case-function-expression is the default value\n                    if (index === caseArgs.length - 1) {\n                        match = caseArg;\n                        break;\n                        // the case can be a boolean\n                    }\n                    else if (caseArg.case === true) {\n                        match = caseArg.value;\n                        break;\n                        // … or a boolean function that has to be evaluated first\n                    }\n                    else if (OlStyleUtil.evaluateBooleanFunction(caseArg.case, feature)) {\n                        match = caseArg.value;\n                        break;\n                    }\n                }\n                return match;\n            default:\n                return args[0];\n        }\n    }\n    static evaluateStringFunction(func, feature) {\n        const args = func.args.map(arg => {\n            if (isGeoStylerFunction(arg)) {\n                return OlStyleUtil.evaluateFunction(arg, feature);\n            }\n            return arg;\n        });\n        switch (func.name) {\n            case 'numberFormat':\n                // TODO: evaluate this correctly\n                return args[0];\n            case 'strAbbreviate':\n                // TODO: evaluate this correctly\n                return args[0];\n            case 'strCapitalize':\n                // https://stackoverflow.com/a/32589289/10342669\n                var splitStr = args[0].toLowerCase().split(' ');\n                for (let part of splitStr) {\n                    part = part.charAt(0).toUpperCase() + part.substring(1);\n                }\n                return splitStr.join(' ');\n            case 'strConcat':\n                return args.join();\n            case 'strDefaultIfBlank':\n                return args[0]?.length < 1 ? args[1] : args[0];\n            case 'strReplace':\n                if (args[3] === true) {\n                    return args[0].replaceAll(args[1], args[2]);\n                }\n                else {\n                    return args[0].replace(args[1], args[2]);\n                }\n            case 'strStripAccents':\n                // https://stackoverflow.com/a/37511463/10342669\n                return args[0].normalize('NFKD').replace(/[\\u0300-\\u036f]/g, '');\n            case 'strSubstring':\n                return args[0].substring(args[1], args[2]);\n            case 'strSubstringStart':\n                return args[0].substring(args[1]);\n            case 'strToLowerCase':\n                return args[0].toLowerCase();\n            case 'strToUpperCase':\n                return args[0].toUpperCase();\n            case 'strTrim':\n                return args[0].trim();\n            default:\n                return args[0];\n        }\n    }\n    static containsGeoStylerFunctions(style) {\n        return style.rules.some(rule => {\n            const filterHasFunction = Array.isArray(rule.filter) && rule.filter?.some(isGeoStylerFunction);\n            const styleHasFunction = rule.symbolizers?.some(symbolizer => {\n                return Object.values(symbolizer).some(isGeoStylerFunction);\n            });\n            const scaleDenominatorHasFunction = isGeoStylerFunction(rule?.scaleDenominator?.max)\n                || isGeoStylerFunction(rule?.scaleDenominator?.min);\n            return filterHasFunction || styleHasFunction || scaleDenominatorHasFunction;\n        });\n    }\n}\nexport default OlStyleUtil;\n//# sourceMappingURL=OlStyleUtil.js.map","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","import { parseFont } from 'css-font-parser';\nimport { isGeoStylerBooleanFunction, isGeoStylerFunction, isGeoStylerStringFunction, isIconSymbolizer, isMarkSymbolizer, isSprite } from 'geostyler-style/dist/typeguards';\nimport OlImageState from 'ol/ImageState';\nimport OlGeomPoint from 'ol/geom/Point';\nimport OlStyle from 'ol/style/Style';\nimport OlStyleImage from 'ol/style/Image';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyleText from 'ol/style/Text';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleIcon from 'ol/style/Icon';\nimport OlStyleRegularshape from 'ol/style/RegularShape';\nimport { METERS_PER_UNIT } from 'ol/proj/Units';\nimport OlStyleUtil from './Util/OlStyleUtil';\nimport { toContext } from 'ol/render';\n/**\n * This parser can be used with the GeoStyler.\n * It implements the GeoStyler-Style Parser interface to work with OpenLayers styles.\n *\n * @class OlStyleParser\n * @implements StyleParser\n */\nexport class OlStyleParser {\n    /**\n     * The name of the OlStyleParser.\n     */\n    static title = 'OpenLayers Style Parser';\n    unsupportedProperties = {\n        Symbolizer: {\n            MarkSymbolizer: {\n                avoidEdges: 'none',\n                blur: 'none',\n                offsetAnchor: 'none',\n                pitchAlignment: 'none',\n                pitchScale: 'none'\n            },\n            FillSymbolizer: {\n                antialias: 'none',\n                opacity: {\n                    support: 'none',\n                    info: 'Use fillOpacity instead.'\n                }\n            },\n            IconSymbolizer: {\n                allowOverlap: 'none',\n                anchor: 'none',\n                avoidEdges: 'none',\n                color: 'none',\n                haloBlur: 'none',\n                haloColor: 'none',\n                haloWidth: 'none',\n                keepUpright: 'none',\n                offsetAnchor: 'none',\n                size: {\n                    support: 'partial',\n                    info: 'Will set/get the width of the ol Icon.'\n                },\n                optional: 'none',\n                padding: 'none',\n                pitchAlignment: 'none',\n                rotationAlignment: 'none',\n                textFit: 'none',\n                textFitPadding: 'none'\n            },\n            LineSymbolizer: {\n                blur: 'none',\n                gapWidth: 'none',\n                gradient: 'none',\n                miterLimit: 'none',\n                roundLimit: 'none',\n                spacing: 'none',\n                graphicFill: 'none',\n                graphicStroke: 'none',\n                perpendicularOffset: 'none'\n            },\n            RasterSymbolizer: 'none',\n            TextSymbolizer: {\n                anchor: 'none',\n                placement: {\n                    support: 'partial',\n                    info: 'point and line supported. line-center will be mapped to line.'\n                }\n            }\n        },\n        Function: {\n            double2bool: {\n                support: 'none',\n                info: 'Always returns false'\n            },\n            atan2: {\n                support: 'none',\n                info: 'Currently returns the first argument'\n            },\n            rint: {\n                support: 'none',\n                info: 'Currently returns the first argument'\n            },\n            numberFormat: {\n                support: 'none',\n                info: 'Currently returns the first argument'\n            },\n            strAbbreviate: {\n                support: 'none',\n                info: 'Currently returns the first argument'\n            }\n        }\n    };\n    title = 'OpenLayers Style Parser';\n    olIconStyleCache = {};\n    OlStyleConstructor = OlStyle;\n    OlStyleImageConstructor = OlStyleImage;\n    OlStyleFillConstructor = OlStyleFill;\n    OlStyleStrokeConstructor = OlStyleStroke;\n    OlStyleTextConstructor = OlStyleText;\n    OlStyleCircleConstructor = OlStyleCircle;\n    OlStyleIconConstructor = OlStyleIcon;\n    OlStyleRegularshapeConstructor = OlStyleRegularshape;\n    constructor(ol) {\n        if (ol) {\n            this.OlStyleConstructor = ol.style.Style;\n            this.OlStyleImageConstructor = ol.style.Image;\n            this.OlStyleFillConstructor = ol.style.Fill;\n            this.OlStyleStrokeConstructor = ol.style.Stroke;\n            this.OlStyleTextConstructor = ol.style.Text;\n            this.OlStyleCircleConstructor = ol.style.Circle;\n            this.OlStyleIconConstructor = ol.style.Icon;\n            this.OlStyleRegularshapeConstructor = ol.style.RegularShape;\n        }\n    }\n    isOlParserStyleFct = (x) => {\n        return typeof x === 'function';\n    };\n    /**\n     * Get the GeoStyler-Style PointSymbolizer from an OpenLayers Style object.\n     *\n     * @param olStyle The OpenLayers Style object\n     * @return The GeoStyler-Style PointSymbolizer\n     */\n    getPointSymbolizerFromOlStyle(olStyle) {\n        let pointSymbolizer;\n        if (olStyle.getImage() instanceof this.OlStyleCircleConstructor) {\n            // circle\n            const olCircleStyle = olStyle.getImage();\n            const olFillStyle = olCircleStyle.getFill();\n            const olStrokeStyle = olCircleStyle.getStroke();\n            const offset = olCircleStyle.getDisplacement();\n            const circleSymbolizer = {\n                kind: 'Mark',\n                wellKnownName: 'circle',\n                color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor()) : undefined,\n                opacity: olCircleStyle.getOpacity() !== 1 ? olCircleStyle.getOpacity() : undefined,\n                fillOpacity: olFillStyle ? OlStyleUtil.getOpacity(olFillStyle.getColor()) : undefined,\n                radius: (olCircleStyle.getRadius() !== 0) ? olCircleStyle.getRadius() : 5,\n                strokeColor: olStrokeStyle ? olStrokeStyle.getColor() : undefined,\n                strokeOpacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor()) : undefined,\n                strokeWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n                offset: offset[0] || offset[1] ? offset : undefined\n            };\n            pointSymbolizer = circleSymbolizer;\n        }\n        else if (olStyle.getImage() instanceof this.OlStyleRegularshapeConstructor) {\n            // square, triangle, star, cross or x\n            const olRegularStyle = olStyle.getImage();\n            const olFillStyle = olRegularStyle.getFill();\n            const olStrokeStyle = olRegularStyle.getStroke();\n            const radius = olRegularStyle.getRadius();\n            const radius2 = olRegularStyle.getRadius2();\n            const points = olRegularStyle.getPoints();\n            const angle = olRegularStyle.getAngle();\n            const offset = olRegularStyle.getDisplacement();\n            const markSymbolizer = {\n                kind: 'Mark',\n                color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor()) : undefined,\n                opacity: olRegularStyle.getOpacity() !== 1 ? olRegularStyle.getOpacity() : undefined,\n                fillOpacity: olFillStyle ? OlStyleUtil.getOpacity(olFillStyle.getColor()) : undefined,\n                strokeColor: olStrokeStyle ? olStrokeStyle.getColor() : undefined,\n                strokeOpacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor()) : undefined,\n                strokeWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n                radius: (radius !== 0) ? radius : 5,\n                // Rotation in openlayers is radians while we use degree\n                rotate: olRegularStyle.getRotation() / Math.PI * 180,\n                offset: offset[0] || offset[1] ? offset : undefined\n            };\n            switch (points) {\n                case 2:\n                    switch (angle) {\n                        case 0:\n                            markSymbolizer.wellKnownName = 'shape://vertline';\n                            break;\n                        case Math.PI / 2:\n                            markSymbolizer.wellKnownName = 'shape://horline';\n                            break;\n                        case Math.PI / 4:\n                            markSymbolizer.wellKnownName = 'shape://slash';\n                            break;\n                        case 2 * Math.PI - (Math.PI / 4):\n                            markSymbolizer.wellKnownName = 'shape://backslash';\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                case 3:\n                    switch (angle) {\n                        case 0:\n                            markSymbolizer.wellKnownName = 'triangle';\n                            break;\n                        case Math.PI / 2:\n                            markSymbolizer.wellKnownName = 'shape://carrow';\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                case 4:\n                    if (Number.isFinite(radius2)) {\n                        // cross or x\n                        if (olRegularStyle.getAngle() === 0) {\n                            // cross\n                            markSymbolizer.wellKnownName = 'cross';\n                        }\n                        else {\n                            // x\n                            markSymbolizer.wellKnownName = 'x';\n                        }\n                    }\n                    else {\n                        // square\n                        markSymbolizer.wellKnownName = 'square';\n                    }\n                    break;\n                case 5:\n                    // star\n                    markSymbolizer.wellKnownName = 'star';\n                    break;\n                default:\n                    throw new Error('Could not parse OlStyle. Only 2, 3, 4 or 5 point regular shapes are allowed');\n            }\n            pointSymbolizer = markSymbolizer;\n        }\n        else if (olStyle.getText() instanceof this.OlStyleTextConstructor) {\n            const olTextStyle = olStyle.getText();\n            const olFillStyle = olTextStyle.getFill();\n            const olStrokeStyle = olTextStyle.getStroke();\n            const rotation = olTextStyle.getRotation();\n            let char = olTextStyle.getText() || 'a';\n            const font = olTextStyle.getFont() || '10px sans-serif';\n            const fontName = OlStyleUtil.getFontNameFromOlFont(font);\n            const radius = OlStyleUtil.getSizeFromOlFont(font);\n            const offset = [olTextStyle.getOffsetX(), olTextStyle.getOffsetY()];\n            if (Array.isArray(char)) {\n                char = char[0];\n            }\n            pointSymbolizer = {\n                kind: 'Mark',\n                wellKnownName: `ttf://${fontName}#0x${char.charCodeAt(0).toString(16)}`,\n                color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor()) : undefined,\n                opacity: olFillStyle ? OlStyleUtil.getOpacity(olFillStyle.getColor()) : undefined,\n                strokeColor: olStrokeStyle ? olStrokeStyle.getColor() : undefined,\n                strokeOpacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor()) : undefined,\n                strokeWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n                radius: (radius !== 0) ? radius : 5,\n                // Rotation in openlayers is radians while we use degree\n                rotate: rotation ? rotation / Math.PI * 180 : 0,\n                offset: offset[0] || offset[1] ? offset : undefined\n            };\n        }\n        else {\n            // icon\n            const olIconStyle = olStyle.getImage();\n            const displacement = olIconStyle.getDisplacement();\n            // initialOptions_ as fallback when image is not yet loaded\n            const image = this.getImageFromIconStyle(olIconStyle);\n            // this always gets calculated from ol so this might not have been set initially\n            let size = olIconStyle.getWidth();\n            const rotation = olIconStyle.getRotation() / Math.PI * 180;\n            const opacity = olIconStyle.getOpacity();\n            const iconSymbolizer = {\n                kind: 'Icon',\n                image,\n                opacity: opacity < 1 ? opacity : undefined,\n                size,\n                // Rotation in openlayers is radians while we use degree\n                rotate: rotation !== 0 ? rotation : undefined,\n                offset: displacement[0] || displacement[1] ? displacement : undefined\n            };\n            pointSymbolizer = iconSymbolizer;\n        }\n        return pointSymbolizer;\n    }\n    /**\n     *\n     * @param olIconStyle An ol style Icon representation\n     * @returns A string or Sprite configuration\n     */\n    getImageFromIconStyle(olIconStyle) {\n        const size = olIconStyle.getSize();\n        if (Array.isArray(size)) {\n            // TODO: create getters (and setters?) in openlayers\n            // @ts-ignore\n            let position = olIconStyle.offset_;\n            // @ts-ignore\n            const offsetOrigin = olIconStyle.offsetOrigin_;\n            if (offsetOrigin && offsetOrigin !== 'top-left') {\n                throw new Error(`Offset origin ${offsetOrigin} not supported`);\n            }\n            return {\n                source: olIconStyle.getSrc(),\n                position,\n                size: size\n            };\n        }\n        else {\n            return olIconStyle.getSrc() ? olIconStyle.getSrc() : undefined;\n        }\n    }\n    /**\n     * Get the GeoStyler-Style LineSymbolizer from an OpenLayers Style object.\n     *\n     * @param olStyle The OpenLayers Style object\n     * @return The GeoStyler-Style LineSymbolizer\n     */\n    getLineSymbolizerFromOlStyle(olStyle) {\n        const olStrokeStyle = olStyle.getStroke();\n        // getLineDash returns null not undefined. So we have to double check\n        const dashArray = olStrokeStyle ? olStrokeStyle.getLineDash() : undefined;\n        return {\n            kind: 'Line',\n            color: olStrokeStyle ? OlStyleUtil.getHexColor(olStrokeStyle.getColor()) : undefined,\n            opacity: olStrokeStyle ? OlStyleUtil.getOpacity(olStrokeStyle.getColor()) : undefined,\n            width: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n            cap: olStrokeStyle ? olStrokeStyle.getLineCap() : 'butt',\n            join: olStrokeStyle ? olStrokeStyle.getLineJoin() : 'miter',\n            dasharray: dashArray ? dashArray : undefined,\n            dashOffset: olStrokeStyle ? olStrokeStyle.getLineDashOffset() : undefined\n        };\n    }\n    /**\n     * Get the GeoStyler-Style FillSymbolizer from an OpenLayers Style object.\n     *\n     * PolygonSymbolizer Stroke is just partially supported.\n     *\n     * @param olStyle The OpenLayers Style object\n     * @return The GeoStyler-Style FillSymbolizer\n     */\n    getFillSymbolizerFromOlStyle(olStyle) {\n        const olFillStyle = olStyle.getFill();\n        const olStrokeStyle = olStyle.getStroke();\n        // getLineDash returns null not undefined. So we have to double check\n        const outlineDashArray = olStrokeStyle ? olStrokeStyle.getLineDash() : undefined;\n        const symbolizer = {\n            kind: 'Fill'\n        };\n        if (olFillStyle) {\n            symbolizer.color = OlStyleUtil.getHexColor(olFillStyle.getColor());\n        }\n        if (olFillStyle) {\n            symbolizer.fillOpacity = OlStyleUtil.getOpacity(olFillStyle.getColor());\n        }\n        if (olStrokeStyle) {\n            symbolizer.outlineColor = OlStyleUtil.getHexColor(olStrokeStyle.getColor());\n        }\n        if (outlineDashArray) {\n            symbolizer.outlineDasharray = outlineDashArray;\n        }\n        if (olStrokeStyle) {\n            symbolizer.outlineOpacity = OlStyleUtil.getOpacity(olStrokeStyle.getColor());\n        }\n        if (olStrokeStyle && olStrokeStyle.getWidth()) {\n            symbolizer.outlineWidth = olStrokeStyle.getWidth();\n        }\n        return symbolizer;\n    }\n    /**\n     * Get the GeoStyler-Style TextSymbolizer from an OpenLayers Style object.\n     *\n     *\n     * @param olStyle The OpenLayers Style object\n     * @return The GeoStyler-Style TextSymbolizer\n     */\n    getTextSymbolizerFromOlStyle(olStyle) {\n        const olTextStyle = olStyle.getText();\n        if (!olTextStyle) {\n            throw new Error('Could not get text from olStyle.');\n        }\n        const olFillStyle = olTextStyle.getFill();\n        const olStrokeStyle = olTextStyle.getStroke();\n        const offsetX = olTextStyle.getOffsetX();\n        const offsetY = olTextStyle.getOffsetY();\n        const font = olTextStyle.getFont();\n        const rotation = olTextStyle.getRotation();\n        const allowOverlap = olTextStyle.getOverflow() ? olTextStyle.getOverflow() : undefined;\n        const placement = olTextStyle.getPlacement();\n        const text = olTextStyle.getText();\n        const label = Array.isArray(text) ? text[0] : text;\n        let fontSize = Infinity;\n        let fontFamily = undefined;\n        let fontWeight = undefined;\n        let fontStyle = undefined;\n        if (font) {\n            const fontObj = parseFont(font);\n            if (fontObj['font-weight']) {\n                fontWeight = fontObj['font-weight'];\n            }\n            if (fontObj['font-size']) {\n                fontSize = parseInt(fontObj['font-size'], 10);\n            }\n            if (fontObj['font-family']) {\n                const fontFamilies = fontObj['font-family'];\n                fontFamily = fontFamilies?.map((f) => f.includes(' ') ? '\"' + f + '\"' : f);\n            }\n            if (fontObj['font-style']) {\n                fontStyle = fontObj['font-style'];\n            }\n        }\n        return {\n            kind: 'Text',\n            label,\n            placement,\n            allowOverlap,\n            color: olFillStyle ? OlStyleUtil.getHexColor(olFillStyle.getColor()) : undefined,\n            size: isFinite(fontSize) ? fontSize : undefined,\n            font: fontFamily,\n            fontWeight: fontWeight || undefined,\n            fontStyle: fontStyle || undefined,\n            offset: (offsetX !== undefined) && (offsetY !== undefined) ? [offsetX, offsetY] : [0, 0],\n            haloColor: olStrokeStyle && olStrokeStyle.getColor() ?\n                OlStyleUtil.getHexColor(olStrokeStyle.getColor()) : undefined,\n            haloWidth: olStrokeStyle ? olStrokeStyle.getWidth() : undefined,\n            rotate: (rotation !== undefined) ? rotation / Math.PI * 180 : undefined\n        };\n    }\n    /**\n     * Get the GeoStyler-Style Symbolizer from an OpenLayers Style object.\n     *\n     * @param olStyles The OpenLayers Style object\n     * @return The GeoStyler-Style Symbolizer array\n     */\n    getSymbolizersFromOlStyle(olStyles) {\n        const symbolizers = [];\n        olStyles.forEach(olStyle => {\n            let symbolizer;\n            const styleType = this.getStyleTypeFromOlStyle(olStyle);\n            switch (styleType) {\n                case 'Point':\n                    if (olStyle.getText() && !OlStyleUtil.getIsMarkSymbolizerFont(olStyle.getText().getFont())) {\n                        symbolizer = this.getTextSymbolizerFromOlStyle(olStyle);\n                    }\n                    else {\n                        symbolizer = this.getPointSymbolizerFromOlStyle(olStyle);\n                    }\n                    break;\n                case 'Line':\n                    symbolizer = this.getLineSymbolizerFromOlStyle(olStyle);\n                    break;\n                case 'Fill':\n                    symbolizer = this.getFillSymbolizerFromOlStyle(olStyle);\n                    break;\n                default:\n                    throw new Error('Failed to parse SymbolizerKind from OpenLayers Style');\n            }\n            symbolizers.push(symbolizer);\n        });\n        return symbolizers;\n    }\n    /**\n     * Get the GeoStyler-Style Rule from an OpenLayers Style object.\n     *\n     * @param olStyles The OpenLayers Style object\n     * @return The GeoStyler-Style Rule\n     */\n    getRuleFromOlStyle(olStyles) {\n        let symbolizers;\n        const name = 'OL Style Rule 0';\n        if (Array.isArray(olStyles)) {\n            symbolizers = this.getSymbolizersFromOlStyle(olStyles);\n        }\n        else {\n            symbolizers = this.getSymbolizersFromOlStyle([olStyles]);\n        }\n        return {\n            name, symbolizers\n        };\n    }\n    /**\n     * Get the GeoStyler-Style Symbolizer from an OpenLayers Style object.\n     *\n     * @param olStyle The OpenLayers Style object\n     * @return The GeoStyler-Style Symbolizer\n     */\n    getStyleTypeFromOlStyle(olStyle) {\n        let styleType;\n        if (olStyle.getImage() instanceof this.OlStyleImageConstructor) {\n            styleType = 'Point';\n        }\n        else if (olStyle.getText() instanceof this.OlStyleTextConstructor) {\n            styleType = 'Point';\n        }\n        else if (olStyle.getFill() instanceof this.OlStyleFillConstructor) {\n            styleType = 'Fill';\n        }\n        else if (olStyle.getStroke() && !olStyle.getFill()) {\n            styleType = 'Line';\n        }\n        else {\n            throw new Error('StyleType could not be detected');\n        }\n        return styleType;\n    }\n    /**\n     * Get the GeoStyler-Style Style from an OpenLayers Style object.\n     *\n     * @param olStyle The OpenLayers Style object\n     * @return The GeoStyler-Style Style\n     */\n    olStyleToGeoStylerStyle(olStyle) {\n        const name = 'OL Style';\n        const rule = this.getRuleFromOlStyle(olStyle);\n        return {\n            name,\n            rules: [rule]\n        };\n    }\n    /**\n     * The readStyle implementation of the GeoStyler-Style StyleParser interface.\n     * It reads an OpenLayers Style, an array of OpenLayers Styles or an olParserStyleFct and returns a Promise.\n     *\n     * The Promise itself resolves with a GeoStyler-Style Style.\n     *\n     * @param olStyle The style to be parsed\n     * @return The Promise resolving with the GeoStyler-Style Style\n     */\n    readStyle(olStyle) {\n        return new Promise((resolve) => {\n            try {\n                if (this.isOlParserStyleFct(olStyle)) {\n                    resolve({\n                        output: olStyle.__geoStylerStyle\n                    });\n                }\n                else {\n                    olStyle = olStyle;\n                    const geoStylerStyle = this.olStyleToGeoStylerStyle(olStyle);\n                    const unsupportedProperties = this.checkForUnsupportedProperties(geoStylerStyle);\n                    resolve({\n                        output: geoStylerStyle,\n                        unsupportedProperties\n                    });\n                }\n            }\n            catch (error) {\n                resolve({\n                    errors: [error]\n                });\n            }\n        });\n    }\n    /**\n     * The writeStyle implementation of the GeoStyler-Style StyleParser interface.\n     * It reads a GeoStyler-Style Style and returns a Promise.\n     * The Promise itself resolves one of three types\n     *\n     * 1. OlStyle if input Style consists of\n     *    one rule with one symbolizer, no filter, no scaleDenominator, no TextSymbolizer\n     * 2. OlStyle[] if input Style consists of\n     *    one rule with multiple symbolizers, no filter, no scaleDenominator, no TextSymbolizer\n     * 3. OlParserStyleFct for everything else\n     *\n     * @param geoStylerStyle A GeoStyler-Style Style.\n     * @return The Promise resolving with one of above mentioned style types.\n     */\n    writeStyle(geoStylerStyle) {\n        return new Promise((resolve) => {\n            const clonedStyle = structuredClone(geoStylerStyle);\n            const unsupportedProperties = this.checkForUnsupportedProperties(clonedStyle);\n            try {\n                const olStyle = this.getOlStyleTypeFromGeoStylerStyle(clonedStyle);\n                resolve({\n                    output: olStyle,\n                    unsupportedProperties,\n                    warnings: unsupportedProperties && ['Your style contains unsupportedProperties!']\n                });\n            }\n            catch (error) {\n                resolve({\n                    errors: [error]\n                });\n            }\n        });\n    }\n    checkForUnsupportedProperties(geoStylerStyle) {\n        const capitalizeFirstLetter = (a) => a[0].toUpperCase() + a.slice(1);\n        const unsupportedProperties = {};\n        geoStylerStyle.rules.forEach(rule => {\n            // ScaleDenominator and Filters are completly supported so we just check for symbolizers\n            rule.symbolizers.forEach(symbolizer => {\n                const key = capitalizeFirstLetter(`${symbolizer.kind}Symbolizer`);\n                const value = this.unsupportedProperties?.Symbolizer?.[key];\n                if (value) {\n                    if (typeof value === 'string') {\n                        if (!unsupportedProperties.Symbolizer) {\n                            unsupportedProperties.Symbolizer = {};\n                        }\n                        unsupportedProperties.Symbolizer[key] = value;\n                    }\n                    else {\n                        Object.keys(symbolizer).forEach(property => {\n                            if (value[property]) {\n                                if (!unsupportedProperties.Symbolizer) {\n                                    unsupportedProperties.Symbolizer = {};\n                                }\n                                if (!unsupportedProperties.Symbolizer[key]) {\n                                    unsupportedProperties.Symbolizer[key] = {};\n                                }\n                                unsupportedProperties.Symbolizer[key][property] = value[property];\n                            }\n                        });\n                    }\n                }\n            });\n        });\n        if (Object.keys(unsupportedProperties).length > 0) {\n            return unsupportedProperties;\n        }\n        return undefined;\n    }\n    /**\n     * Decides which OlStyleType should be returned depending on given geoStylerStyle.\n     * Three OlStyleTypes are possible:\n     *\n     * 1. OlStyle if input Style consists of\n     *    one rule with one symbolizer, no filter, no scaleDenominator, no TextSymbolizer\n     * 2. OlStyle[] if input Style consists of\n     *    one rule with multiple symbolizers, no filter, no scaleDenominator, no TextSymbolizer\n     * 3. OlParserStyleFct for everything else\n     *\n     * @param geoStylerStyle A GeoStyler-Style Style\n     */\n    getOlStyleTypeFromGeoStylerStyle(geoStylerStyle) {\n        const rules = geoStylerStyle.rules;\n        const nrRules = rules.length;\n        if (nrRules === 1) {\n            const hasFilter = geoStylerStyle?.rules?.[0]?.filter !== undefined ? true : false;\n            const hasMinScale = geoStylerStyle?.rules?.[0]?.scaleDenominator?.min !== undefined ? true : false;\n            const hasMaxScale = geoStylerStyle?.rules?.[0]?.scaleDenominator?.max !== undefined ? true : false;\n            const hasScaleDenominator = hasMinScale || hasMaxScale ? true : false;\n            const hasFunctions = OlStyleUtil.containsGeoStylerFunctions(geoStylerStyle);\n            const nrSymbolizers = geoStylerStyle.rules[0].symbolizers.length;\n            const hasTextSymbolizer = rules[0].symbolizers.some((symbolizer) => {\n                return symbolizer.kind === 'Text';\n            });\n            const hasDynamicIconSymbolizer = rules[0].symbolizers.some((symbolizer) => {\n                return symbolizer.kind === 'Icon' && typeof (symbolizer.image) === 'string' && symbolizer.image.includes('{{');\n            });\n            if (!hasFilter && !hasScaleDenominator && !hasTextSymbolizer && !hasDynamicIconSymbolizer && !hasFunctions) {\n                if (nrSymbolizers === 1) {\n                    return this.geoStylerStyleToOlStyle(geoStylerStyle);\n                }\n                else {\n                    return this.geoStylerStyleToOlStyleArray(geoStylerStyle);\n                }\n            }\n            else {\n                return this.geoStylerStyleToOlParserStyleFct(geoStylerStyle);\n            }\n        }\n        else {\n            return this.geoStylerStyleToOlParserStyleFct(geoStylerStyle);\n        }\n    }\n    /**\n     * Parses the first symbolizer of the first rule of a GeoStyler-Style Style.\n     *\n     * @param geoStylerStyle GeoStyler-Style Style\n     * @return An OpenLayers Style Object\n     */\n    geoStylerStyleToOlStyle(geoStylerStyle) {\n        const rule = geoStylerStyle.rules[0];\n        const symbolizer = rule.symbolizers[0];\n        const olSymbolizer = this.getOlSymbolizerFromSymbolizer(symbolizer);\n        return olSymbolizer;\n    }\n    /**\n     * Parses all symbolizers of the first rule of a GeoStyler-Style Style.\n     *\n     * @param geoStylerStyle GeoStyler-Style Style\n     * @return An array of OpenLayers Style Objects\n     */\n    geoStylerStyleToOlStyleArray(geoStylerStyle) {\n        const rule = geoStylerStyle.rules[0];\n        const olStyles = [];\n        rule.symbolizers.forEach((symbolizer) => {\n            const olSymbolizer = this.getOlSymbolizerFromSymbolizer(symbolizer);\n            olStyles.push(olSymbolizer);\n        });\n        return olStyles;\n    }\n    /**\n     * Get the OpenLayers Style object from an GeoStyler-Style Style\n     *\n     * @param geoStylerStyle A GeoStyler-Style Style.\n     * @return An OlParserStyleFct\n     */\n    geoStylerStyleToOlParserStyleFct(geoStylerStyle) {\n        const rules = structuredClone(geoStylerStyle.rules);\n        const olStyle = (feature, resolution) => {\n            const styles = [];\n            // calculate scale for resolution (from ol-util MapUtil)\n            const dpi = 25.4 / 0.28;\n            const mpu = METERS_PER_UNIT.m;\n            const inchesPerMeter = 39.37;\n            const scale = resolution * mpu * inchesPerMeter * dpi;\n            rules.forEach((rule) => {\n                // handling scale denominator\n                let minScale = rule?.scaleDenominator?.min;\n                let maxScale = rule?.scaleDenominator?.max;\n                let isWithinScale = true;\n                if (minScale || maxScale) {\n                    minScale = isGeoStylerFunction(minScale) ? OlStyleUtil.evaluateNumberFunction(minScale) : minScale;\n                    maxScale = isGeoStylerFunction(maxScale) ? OlStyleUtil.evaluateNumberFunction(maxScale) : maxScale;\n                    if (minScale && scale < minScale) {\n                        isWithinScale = false;\n                    }\n                    if (maxScale && scale >= maxScale) {\n                        isWithinScale = false;\n                    }\n                }\n                // handling filter\n                let matchesFilter = false;\n                if (!rule.filter) {\n                    matchesFilter = true;\n                }\n                else {\n                    try {\n                        matchesFilter = this.geoStylerFilterToOlParserFilter(feature, rule.filter);\n                    }\n                    catch (e) {\n                        matchesFilter = false;\n                    }\n                }\n                if (isWithinScale && matchesFilter) {\n                    rule.symbolizers.forEach((symb) => {\n                        if (symb.visibility === false) {\n                            styles.push(null);\n                        }\n                        if (isGeoStylerBooleanFunction(symb.visibility)) {\n                            const visibility = OlStyleUtil.evaluateBooleanFunction(symb.visibility);\n                            if (!visibility) {\n                                styles.push(null);\n                            }\n                        }\n                        const olSymbolizer = this.getOlSymbolizerFromSymbolizer(symb, feature);\n                        // either an OlStyle or an ol.StyleFunction. OpenLayers only accepts an array\n                        // of OlStyles, not ol.StyleFunctions.\n                        // So we have to check it and in case of an ol.StyleFunction call that function\n                        // and add the returned style to const styles.\n                        if (typeof olSymbolizer !== 'function') {\n                            styles.push(olSymbolizer);\n                        }\n                        else {\n                            const styleFromFct = olSymbolizer(feature, resolution);\n                            styles.push(styleFromFct);\n                        }\n                    });\n                }\n            });\n            return styles;\n        };\n        const olStyleFct = olStyle;\n        olStyleFct.__geoStylerStyle = geoStylerStyle;\n        return olStyleFct;\n    }\n    /**\n     * Checks if a feature matches given filter expression(s)\n     * @param feature ol.Feature\n     * @param filter Filter\n     * @return boolean true if feature matches filter expression\n     */\n    geoStylerFilterToOlParserFilter(feature, filter) {\n        const operatorMapping = {\n            '&&': true,\n            '||': true,\n            '!': true\n        };\n        let matchesFilter = true;\n        if (isGeoStylerBooleanFunction(filter)) {\n            return OlStyleUtil.evaluateBooleanFunction(filter, feature);\n        }\n        if (filter === true || filter === false) {\n            return filter;\n        }\n        const operator = filter[0];\n        let isNestedFilter = false;\n        if (operatorMapping[operator]) {\n            isNestedFilter = true;\n        }\n        try {\n            if (isNestedFilter) {\n                let intermediate;\n                let restFilter;\n                switch (filter[0]) {\n                    case '&&':\n                        intermediate = true;\n                        restFilter = filter.slice(1);\n                        restFilter.forEach((f) => {\n                            if (!this.geoStylerFilterToOlParserFilter(feature, f)) {\n                                intermediate = false;\n                            }\n                        });\n                        matchesFilter = intermediate;\n                        break;\n                    case '||':\n                        intermediate = false;\n                        restFilter = filter.slice(1);\n                        restFilter.forEach((f) => {\n                            if (this.geoStylerFilterToOlParserFilter(feature, f)) {\n                                intermediate = true;\n                            }\n                        });\n                        matchesFilter = intermediate;\n                        break;\n                    case '!':\n                        matchesFilter = !this.geoStylerFilterToOlParserFilter(feature, filter[1]);\n                        break;\n                    default:\n                        throw new Error('Cannot parse Filter. Unknown combination or negation operator.');\n                }\n            }\n            else {\n                let arg1;\n                if (isGeoStylerFunction(filter[1])) {\n                    arg1 = OlStyleUtil.evaluateFunction(filter[1], feature);\n                }\n                else {\n                    arg1 = feature.get(filter[1]);\n                }\n                let arg2;\n                if (isGeoStylerFunction(filter[2])) {\n                    arg2 = OlStyleUtil.evaluateFunction(filter[2], feature);\n                }\n                else {\n                    arg2 = filter[2];\n                }\n                switch (filter[0]) {\n                    case '==':\n                        matchesFilter = ('' + arg1) === ('' + arg2);\n                        break;\n                    case '*=':\n                        // inspired by\n                        // https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/includes#Polyfill\n                        if (typeof arg2 === 'string' && typeof arg1 === 'string') {\n                            if (arg2.length > arg1.length) {\n                                matchesFilter = false;\n                            }\n                            else {\n                                matchesFilter = arg1.indexOf(arg2) !== -1;\n                            }\n                        }\n                        break;\n                    case '!=':\n                        matchesFilter = ('' + arg1) !== ('' + arg2);\n                        break;\n                    case '<':\n                        matchesFilter = Number(arg1) < Number(arg2);\n                        break;\n                    case '<=':\n                        matchesFilter = Number(arg1) <= Number(arg2);\n                        break;\n                    case '>':\n                        matchesFilter = Number(arg1) > Number(arg2);\n                        break;\n                    case '>=':\n                        matchesFilter = Number(arg1) >= Number(arg2);\n                        break;\n                    default:\n                        throw new Error('Cannot parse Filter. Unknown comparison operator.');\n                }\n            }\n        }\n        catch (e) {\n            throw new Error('Cannot parse Filter. Invalid structure.');\n        }\n        return matchesFilter;\n    }\n    /**\n     * Get the OpenLayers Style object or an OL StyleFunction from an\n     * GeoStyler-Style Symbolizer.\n     *\n     * @param symbolizer A GeoStyler-Style Symbolizer.\n     * @return The OpenLayers Style object or a StyleFunction\n     */\n    getOlSymbolizerFromSymbolizer(symbolizer, feature) {\n        let olSymbolizer;\n        symbolizer = structuredClone(symbolizer);\n        switch (symbolizer.kind) {\n            case 'Mark':\n                olSymbolizer = this.getOlPointSymbolizerFromMarkSymbolizer(symbolizer, feature);\n                break;\n            case 'Icon':\n                olSymbolizer = this.getOlIconSymbolizerFromIconSymbolizer(symbolizer, feature);\n                break;\n            case 'Text':\n                olSymbolizer = this.getOlTextSymbolizerFromTextSymbolizer(symbolizer, feature);\n                break;\n            case 'Line':\n                olSymbolizer = this.getOlLineSymbolizerFromLineSymbolizer(symbolizer, feature);\n                break;\n            case 'Fill':\n                olSymbolizer = this.getOlPolygonSymbolizerFromFillSymbolizer(symbolizer, feature);\n                break;\n            default:\n                // Return the OL default style since the TS type binding does not allow\n                // us to set olSymbolizer to undefined\n                const fill = new this.OlStyleFillConstructor({\n                    color: 'rgba(255,255,255,0.4)'\n                });\n                const stroke = new this.OlStyleStrokeConstructor({\n                    color: '#3399CC',\n                    width: 1.25\n                });\n                olSymbolizer = new this.OlStyleConstructor({\n                    image: new this.OlStyleCircleConstructor({\n                        fill: fill,\n                        stroke: stroke,\n                        radius: 5\n                    }),\n                    fill: fill,\n                    stroke: stroke\n                });\n                break;\n        }\n        return olSymbolizer;\n    }\n    /**\n     * Get the OL Style object  from an GeoStyler-Style MarkSymbolizer.\n     *\n     * @param markSymbolizer A GeoStyler-Style MarkSymbolizer.\n     * @return The OL Style object\n     */\n    getOlPointSymbolizerFromMarkSymbolizer(markSymbolizer, feature) {\n        let stroke;\n        for (const key of Object.keys(markSymbolizer)) {\n            if (isGeoStylerFunction(markSymbolizer[key])) {\n                markSymbolizer[key] = OlStyleUtil.evaluateFunction(markSymbolizer[key], feature);\n            }\n        }\n        const strokeColor = markSymbolizer.strokeColor;\n        const strokeOpacity = markSymbolizer.strokeOpacity;\n        const sColor = strokeColor && (strokeOpacity !== undefined)\n            ? OlStyleUtil.getRgbaColor(strokeColor, strokeOpacity)\n            : markSymbolizer.strokeColor;\n        if (markSymbolizer.strokeColor || markSymbolizer.strokeWidth !== undefined) {\n            stroke = new this.OlStyleStrokeConstructor({\n                color: sColor,\n                width: markSymbolizer.strokeWidth\n            });\n        }\n        const color = markSymbolizer.color;\n        const opacity = markSymbolizer.opacity;\n        const radius = markSymbolizer.radius;\n        const fillOpacity = markSymbolizer.fillOpacity;\n        const fColor = color && (fillOpacity !== undefined)\n            ? OlStyleUtil.getRgbaColor(color, fillOpacity ?? 1)\n            : color;\n        const fill = new this.OlStyleFillConstructor({\n            color: fColor\n        });\n        const dimensions = (markSymbolizer?.radius ?? 8) * 2; // Default to 16 pixels\n        let olStyle;\n        const shapeOpts = {\n            fill: fill,\n            radius: radius ?? 5,\n            rotation: typeof (markSymbolizer.rotate) === 'number' ? markSymbolizer.rotate * Math.PI / 180 : undefined,\n            stroke: stroke,\n            displacement: Array.isArray(markSymbolizer.offset) ? markSymbolizer.offset.map(Number) : undefined\n        };\n        const iconOpts = {\n            crossOrigin: 'anonymous',\n            opacity: markSymbolizer.opacity,\n            rotation: typeof (markSymbolizer.rotate) === 'number' ? markSymbolizer.rotate * Math.PI / 180 : undefined,\n            displacement: Array.isArray(markSymbolizer.offset) ? markSymbolizer.offset.map(Number) : undefined\n        };\n        switch (markSymbolizer.wellKnownName) {\n            case 'shape://dot':\n            case 'circle':\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleCircleConstructor(shapeOpts)\n                });\n                break;\n            case 'square':\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 4,\n                        angle: 45 * Math.PI / 180\n                    })\n                });\n                break;\n            case 'triangle':\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 3,\n                        angle: 0\n                    })\n                });\n                break;\n            case 'diamond':\n                const markerSVG = `\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"` + dimensions + `\" height=\"` + dimensions + `\" viewBox=\"-12 -12 24 24\">\n            <polygon points=\"-10,0 0,10 10,0 0,-10 -10,0\"\n                fill=\"` + fColor + `\" \n                stroke=\"` + markSymbolizer.strokeColor + `\"\n                stroke-width=\"` + (markSymbolizer.strokeWidth === undefined ? 1 : markSymbolizer.strokeWidth) + `\"/>\n          </svg>\n        `;\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleIconConstructor({\n                        ...iconOpts,\n                        src: `data:image/svg+xml;base64,${btoa(markerSVG)}`, // Convert SVG string to Base64\n                        scale: 1\n                    })\n                });\n                break;\n            case 'star':\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 5,\n                        radius2: shapeOpts.radius / 2.5,\n                        angle: 0\n                    })\n                });\n                break;\n            case 'shape://plus':\n            case 'cross':\n                // openlayers does not seem to set a default stroke color,\n                // which is needed for regularshapes with radius2 = 0\n                if (shapeOpts.stroke === undefined) {\n                    shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n                        color: '#000'\n                    });\n                }\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 4,\n                        radius2: 0,\n                        angle: 0\n                    })\n                });\n                break;\n            case 'shape://times':\n            case 'x':\n                // openlayers does not seem to set a default stroke color,\n                // which is needed for regularshapes with radius2 = 0\n                if (shapeOpts.stroke === undefined) {\n                    shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n                        color: '#000'\n                    });\n                }\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 4,\n                        radius2: 0,\n                        angle: 45 * Math.PI / 180\n                    })\n                });\n                break;\n            case 'shape://backslash':\n                // openlayers does not seem to set a default stroke color,\n                // which is needed for regularshapes with radius2 = 0\n                if (shapeOpts.stroke === undefined) {\n                    shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n                        color: '#000'\n                    });\n                }\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 2,\n                        angle: 2 * Math.PI - (Math.PI / 4)\n                    })\n                });\n                break;\n            case 'shape://horline':\n                // openlayers does not seem to set a default stroke color,\n                // which is needed for regularshapes with radius2 = 0\n                if (shapeOpts.stroke === undefined) {\n                    shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n                        color: '#000'\n                    });\n                }\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 2,\n                        angle: Math.PI / 2\n                    })\n                });\n                break;\n            // so far, both arrows are closed arrows. Also, shape is a regular triangle with\n            // all sides of equal length. In geoserver arrows only have two sides of equal length.\n            // TODO redefine shapes of arrows?\n            case 'shape://oarrow':\n            case 'shape://carrow':\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 3,\n                        angle: Math.PI / 2\n                    })\n                });\n                break;\n            case 'shape://slash':\n                // openlayers does not seem to set a default stroke color,\n                // which is needed for regularshapes with radius2 = 0\n                if (shapeOpts.stroke === undefined) {\n                    shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n                        color: '#000'\n                    });\n                }\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 2,\n                        angle: Math.PI / 4\n                    })\n                });\n                break;\n            case 'shape://vertline':\n                // openlayers does not seem to set a default stroke color,\n                // which is needed for regularshapes with radius2 = 0\n                if (shapeOpts.stroke === undefined) {\n                    shapeOpts.stroke = new this.OlStyleStrokeConstructor({\n                        color: '#000'\n                    });\n                }\n                olStyle = new this.OlStyleConstructor({\n                    image: new this.OlStyleRegularshapeConstructor({\n                        ...shapeOpts,\n                        points: 2,\n                        angle: 0\n                    })\n                });\n                break;\n            default:\n                if (OlStyleUtil.getIsFontGlyphBased(markSymbolizer)) {\n                    olStyle = new this.OlStyleConstructor({\n                        text: new this.OlStyleTextConstructor({\n                            text: OlStyleUtil.getCharacterForMarkSymbolizer(markSymbolizer),\n                            font: OlStyleUtil.getTextFontForMarkSymbolizer(markSymbolizer),\n                            fill: shapeOpts.fill,\n                            stroke: shapeOpts.stroke,\n                            rotation: shapeOpts.rotation\n                        })\n                    });\n                    break;\n                }\n                throw new Error('MarkSymbolizer cannot be parsed. Unsupported WellKnownName.');\n        }\n        if (Number.isFinite(opacity) && olStyle.getImage()) {\n            olStyle.getImage().setOpacity(opacity);\n        }\n        return olStyle;\n    }\n    /**\n     * Get the OL Style object  from an GeoStyler-Style IconSymbolizer.\n     *\n     * @param symbolizer  A GeoStyler-Style IconSymbolizer.\n     * @return The OL Style object\n     */\n    getOlIconSymbolizerFromIconSymbolizer(symbolizer, feat) {\n        for (const key of Object.keys(symbolizer)) {\n            if (isGeoStylerFunction(symbolizer[key])) {\n                symbolizer[key] = OlStyleUtil.evaluateFunction(symbolizer[key], feat);\n            }\n        }\n        const baseProps = {\n            src: isSprite(symbolizer.image) ? symbolizer.image.source : symbolizer.image,\n            crossOrigin: 'anonymous',\n            opacity: symbolizer.opacity,\n            width: symbolizer.size,\n            // Rotation in openlayers is radians while we use degree\n            rotation: (typeof (symbolizer.rotate) === 'number' ? symbolizer.rotate * Math.PI / 180 : undefined),\n            displacement: symbolizer.offset,\n            size: isSprite(symbolizer.image) ? symbolizer.image.size : undefined,\n            offset: isSprite(symbolizer.image) ? symbolizer.image.position : undefined,\n        };\n        // check if IconSymbolizer.image contains a placeholder\n        const prefix = '\\\\{\\\\{';\n        const suffix = '\\\\}\\\\}';\n        const regExp = new RegExp(prefix + '.*?' + suffix, 'g');\n        const regExpRes = typeof (symbolizer.image) === 'string' ? symbolizer.image.match(regExp) : null;\n        if (regExpRes) {\n            // if it contains a placeholder\n            // return olStyleFunction\n            const olPointStyledIconFn = (feature) => {\n                let src = OlStyleUtil.resolveAttributeTemplate(feature, symbolizer.image, '');\n                // src can't be blank, would trigger ol errors\n                if (!src) {\n                    src = symbolizer.image + '';\n                }\n                let image;\n                if (this.olIconStyleCache[src]) {\n                    image = this.olIconStyleCache[src];\n                    if (baseProps.rotation !== undefined) {\n                        image.setRotation(baseProps.rotation);\n                    }\n                    if (baseProps.opacity !== undefined) {\n                        image.setOpacity(baseProps.opacity);\n                    }\n                }\n                else {\n                    image = new this.OlStyleIconConstructor({\n                        ...baseProps,\n                        src // order is important\n                    });\n                    this.olIconStyleCache[src] = image;\n                }\n                const style = new this.OlStyleConstructor({\n                    image\n                });\n                return style;\n            };\n            return olPointStyledIconFn;\n        }\n        else {\n            return new this.OlStyleConstructor({\n                image: new this.OlStyleIconConstructor({\n                    ...baseProps\n                })\n            });\n        }\n    }\n    /**\n     * Get the OL Style object from an GeoStyler-Style LineSymbolizer.\n     *\n     * @param symbolizer A GeoStyler-Style LineSymbolizer.\n     * @return The OL Style object\n     */\n    getOlLineSymbolizerFromLineSymbolizer(symbolizer, feat) {\n        for (const key of Object.keys(symbolizer)) {\n            if (isGeoStylerFunction(symbolizer[key])) {\n                symbolizer[key] = OlStyleUtil.evaluateFunction(symbolizer[key], feat);\n            }\n        }\n        const color = symbolizer.color;\n        const opacity = symbolizer.opacity;\n        const sColor = (color && opacity !== null && opacity !== undefined) ?\n            OlStyleUtil.getRgbaColor(color, opacity) : color;\n        return new this.OlStyleConstructor({\n            stroke: new this.OlStyleStrokeConstructor({\n                color: sColor,\n                width: symbolizer.width,\n                lineCap: symbolizer.cap,\n                lineJoin: symbolizer.join,\n                lineDash: symbolizer.dasharray,\n                lineDashOffset: symbolizer.dashOffset\n            })\n        });\n    }\n    /**\n     * Get the OL Style object from an GeoStyler-Style FillSymbolizer.\n     *\n     * @param symbolizer A GeoStyler-Style FillSymbolizer.\n     * @return The OL Style object\n     */\n    getOlPolygonSymbolizerFromFillSymbolizer(symbolizer, feat) {\n        for (const key of Object.keys(symbolizer)) {\n            if (isGeoStylerFunction(symbolizer[key])) {\n                symbolizer[key] = OlStyleUtil.evaluateFunction(symbolizer[key], feat);\n            }\n        }\n        const color = symbolizer.color;\n        const opacity = symbolizer.fillOpacity;\n        const fColor = color && Number.isFinite(opacity)\n            ? OlStyleUtil.getRgbaColor(color, opacity)\n            : color;\n        let fill = color\n            ? new this.OlStyleFillConstructor({ color: fColor })\n            : undefined;\n        const outlineColor = symbolizer.outlineColor;\n        const outlineOpacity = symbolizer.outlineOpacity;\n        const oColor = (outlineColor && Number.isFinite(outlineOpacity))\n            ? OlStyleUtil.getRgbaColor(outlineColor, outlineOpacity)\n            : outlineColor;\n        const stroke = outlineColor || symbolizer.outlineWidth ? new this.OlStyleStrokeConstructor({\n            color: oColor,\n            width: symbolizer.outlineWidth,\n            lineDash: symbolizer.outlineDasharray,\n        }) : undefined;\n        const olStyle = new this.OlStyleConstructor({\n            fill,\n            stroke\n        });\n        if (symbolizer.graphicFill) {\n            const pattern = this.getOlPatternFromGraphicFill(symbolizer.graphicFill);\n            if (!fill) {\n                fill = new this.OlStyleFillConstructor({});\n            }\n            if (pattern) {\n                fill.setColor(pattern);\n            }\n            olStyle.setFill(fill);\n        }\n        return olStyle;\n    }\n    /**\n     * Get the pattern for a graphicFill.\n     *\n     * This creates a CanvasPattern based on the\n     * properties of the given PointSymbolizer. Currently,\n     * only IconSymbolizer and MarkSymbolizer are supported.\n     *\n     * @param graphicFill The Symbolizer that holds the pattern config.\n     * @returns The created CanvasPattern, or null.\n     */\n    getOlPatternFromGraphicFill(graphicFill) {\n        let graphicFillStyle;\n        if (isIconSymbolizer(graphicFill)) {\n            graphicFillStyle = this.getOlIconSymbolizerFromIconSymbolizer(graphicFill);\n            const graphicFillImage = graphicFillStyle?.getImage();\n            graphicFillImage?.load(); // Needed for Icon type images with a remote src\n            // We can only work with the image once it's loaded\n            if (graphicFillImage?.getImageState() !== OlImageState.LOADED) {\n                return null;\n            }\n        }\n        else if (isMarkSymbolizer(graphicFill)) {\n            graphicFillStyle = this.getOlPointSymbolizerFromMarkSymbolizer(graphicFill);\n        }\n        else {\n            return null;\n        }\n        // We need to clone the style and image since we'll be changing the scale below (hack)\n        const graphicFillStyleCloned = graphicFillStyle.clone();\n        const imageCloned = graphicFillStyleCloned.getImage();\n        // Temporary canvas.\n        // TODO: Can/should we reuse an pre-existing one for efficiency?\n        const tmpCanvas = document.createElement('canvas');\n        const tmpContext = tmpCanvas.getContext('2d');\n        // Hack to make scaling work for Icons.\n        // TODO: find a better way than this.\n        const scale = imageCloned.getScale() || 1;\n        const pixelRatio = scale;\n        imageCloned.setScale(1);\n        const size = imageCloned.getSize();\n        // Create the context where we'll be drawing the style on\n        const vectorContext = toContext(tmpContext, {\n            pixelRatio,\n            size\n        });\n        // Draw the graphic\n        vectorContext.setStyle(graphicFillStyleCloned);\n        const pointCoords = size.map(item => item / 2);\n        vectorContext.drawGeometry(new OlGeomPoint(pointCoords));\n        // Create the actual pattern and return style\n        return tmpContext.createPattern(tmpCanvas, 'repeat');\n    }\n    /**\n     * Get the OL StyleFunction object from an GeoStyler-Style TextSymbolizer.\n     *\n     * @param {TextSymbolizer} textSymbolizer A GeoStyler-Style TextSymbolizer.\n     * @return {object} The OL StyleFunction\n     */\n    getOlTextSymbolizerFromTextSymbolizer(symbolizer, feat) {\n        for (const key of Object.keys(symbolizer)) {\n            if (isGeoStylerFunction(symbolizer[key])) {\n                symbolizer[key] = OlStyleUtil.evaluateFunction(symbolizer[key], feat);\n            }\n        }\n        const color = symbolizer.color;\n        let placement = symbolizer.placement;\n        if (!placement) {\n            // When setting placement it must not be undefined.\n            // So we set it to the OL default value.\n            placement = 'point';\n        }\n        if (placement === 'line-center') {\n            // line-center not supported by OL.\n            // So we use the closest supported value.\n            placement = 'line';\n        }\n        const opacity = symbolizer.opacity;\n        const fColor = color && Number.isFinite(opacity)\n            ? OlStyleUtil.getRgbaColor(color, opacity)\n            : color;\n        const haloColor = symbolizer.haloColor;\n        const haloWidth = symbolizer.haloWidth;\n        const sColor = haloColor && Number.isFinite(opacity)\n            ? OlStyleUtil.getRgbaColor(haloColor, opacity)\n            : haloColor;\n        const baseProps = {\n            font: OlStyleUtil.getTextFont(symbolizer),\n            fill: new this.OlStyleFillConstructor({\n                color: fColor\n            }),\n            stroke: new this.OlStyleStrokeConstructor({\n                color: sColor,\n                width: haloWidth ? haloWidth : 0\n            }),\n            overflow: symbolizer.allowOverlap,\n            offsetX: (symbolizer.offset ? symbolizer.offset[0] : 0),\n            offsetY: (symbolizer.offset ? symbolizer.offset[1] : 0),\n            rotation: typeof (symbolizer.rotate) === 'number' ? symbolizer.rotate * Math.PI / 180 : undefined,\n            placement: placement\n            // TODO check why props match\n            // textAlign: symbolizer.pitchAlignment,\n            // textBaseline: symbolizer.anchor\n        };\n        // check if TextSymbolizer.label contains a placeholder\n        const prefix = '\\\\{\\\\{';\n        const suffix = '\\\\}\\\\}';\n        const regExp = new RegExp(prefix + '.*?' + suffix, 'g');\n        let regExpRes;\n        if (!isGeoStylerStringFunction(symbolizer.label)) {\n            regExpRes = symbolizer.label ? symbolizer.label.match(regExp) : null;\n        }\n        if (regExpRes) {\n            // if it contains a placeholder\n            // return olStyleFunction\n            const olPointStyledLabelFn = (feature) => {\n                const text = new this.OlStyleTextConstructor({\n                    text: OlStyleUtil.resolveAttributeTemplate(feature, symbolizer.label, ''),\n                    ...baseProps\n                });\n                const style = new this.OlStyleConstructor({\n                    text: text\n                });\n                return style;\n            };\n            return olPointStyledLabelFn;\n        }\n        else {\n            // if TextSymbolizer does not contain a placeholder\n            // return OlStyle\n            return new this.OlStyleConstructor({\n                text: new this.OlStyleTextConstructor({\n                    text: symbolizer.label,\n                    ...baseProps\n                })\n            });\n        }\n    }\n}\nexport default OlStyleParser;\n//# sourceMappingURL=OlStyleParser.js.map","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport array from \"../array.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","abstract class AbstractOutput {\r\n  protected constructor(\r\n    protected size: [number, number],\r\n    protected maxColumnWidth: number | null,\r\n    protected maxColumnHeight: number | null\r\n  ) {}\r\n  abstract useContainer(title: string): void;\r\n  abstract useRoot(): void;\r\n  abstract addTitle(text: string, x: number|string, y: number|string): void;\r\n  abstract addLabel(text: string, x: number|string, y: number|string): void;\r\n  abstract addImage(\r\n    dataUrl: string,\r\n    imgWidth: number,\r\n    imgHeight: number,\r\n    x: number|string,\r\n    y: number|string,\r\n    drawRect: boolean,\r\n  ): Promise<void>;\r\n  abstract generate(finalHeight: number): Element;\r\n}\r\nexport default AbstractOutput;\r\n","import {BaseType, select, Selection} from 'd3-selection';\r\nimport AbstractOutput from './AbstractOutput';\r\n\r\nconst ROOT_CLASS = 'geostyler-legend-renderer';\r\n\r\nexport default class SvgOutput extends AbstractOutput {\r\n  root: Selection<SVGSVGElement, unknown, null, undefined> | null | undefined = null;\r\n  currentContainer: Selection<SVGGElement, unknown, null, undefined> | null | undefined = null;\r\n\r\n  constructor(\r\n    size: [number, number],\r\n    maxColumnWidth: number | undefined,\r\n    maxColumnHeight: number | undefined,\r\n    target?: HTMLElement,\r\n  ) {\r\n    super(size, maxColumnWidth || 0, maxColumnHeight || 0);\r\n\r\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg') as SVGSVGElement;\r\n\r\n    this.root = select(svg)\r\n      .attr('class', ROOT_CLASS)\r\n      .attr('viewBox', `0 0 ${size[0]} ${size[1]}`)\r\n      .attr('top', 0)\r\n      .attr('left', 0)\r\n      .attr('width', size[0])\r\n      .attr('height', size[1]);\r\n    this.currentContainer = this.root;\r\n\r\n    if (target) {\r\n      select(target).select(`.${ROOT_CLASS}`).remove();\r\n      target.append(this.root.node() as Node);\r\n    }\r\n  }\r\n\r\n  useContainer(title: string) {\r\n    this.currentContainer = this.root?.append('g')\r\n      .attr('class', 'legend-item')\r\n      .attr('title', title);\r\n  };\r\n\r\n  useRoot() {\r\n    this.currentContainer = this.root;\r\n  }\r\n\r\n  addTitle(text: string, x: number | string, y: number | string) {\r\n    this.currentContainer?.append('g').append('text')\r\n      .text(text)\r\n      .attr('class', 'legend-title')\r\n      .attr('text-anchor', 'start')\r\n      .attr('dx', x)\r\n      .attr('dy', y);\r\n  };\r\n\r\n  addLabel(text: string, x: number | string, y: number | string) {\r\n    this.currentContainer?.append('text')\r\n      .text(text)\r\n      .attr('x', x)\r\n      .attr('y', y);\r\n  };\r\n\r\n  addImage(\r\n    dataUrl: string,\r\n    imgWidth: number,\r\n    imgHeight: number,\r\n    x: number|string,\r\n    y: number|string,\r\n    drawRect: boolean,\r\n  ) {\r\n    if (drawRect) {\r\n      this.currentContainer?.append('rect')\r\n        .attr('x', x)\r\n        .attr('y', y)\r\n        .attr('width', imgWidth)\r\n        .attr('height', imgHeight)\r\n        .style('fill-opacity', 0)\r\n        .style('stroke', 'black');\r\n    }\r\n    this.currentContainer?.append('svg:image')\r\n      .attr('x', x)\r\n      .attr('y', y)\r\n      .attr('width', imgWidth)\r\n      .attr('height', imgHeight)\r\n      .attr('href', dataUrl);\r\n    this.root?.attr('xmlns', 'http://www.w3.org/2000/svg');\r\n    return Promise.resolve();\r\n  };\r\n\r\n  generate(finalHeight: number) {\r\n    const nodes = this.root?.selectAll('g.legend-item');\r\n    this.shortenLabels(nodes, this.maxColumnWidth || 0);\r\n    if (!this.maxColumnHeight) {\r\n      this.root\r\n        ?.attr('viewBox', `0 0 ${this.size[0]} ${finalHeight}`)\r\n        .attr('height', finalHeight);\r\n    }\r\n    return this.root?.node() as SVGElement;\r\n  }\r\n\r\n  /**\r\n   * Shortens the labels if they overflow.\r\n   * @param {Selection} nodes the legend item group nodes\r\n   * @param {number} maxWidth the maximum column width\r\n   */\r\n  private shortenLabels(nodes: Selection<BaseType, unknown, SVGElement, {}> | undefined, maxWidth: number) {\r\n    nodes?.each(function() {\r\n      const node = select(this);\r\n      const text = node.select('text');\r\n      if (!(node.node() instanceof SVGElement) || !text.size()) {\r\n        return;\r\n      }\r\n      const elem: Element = <Element> (text.node());\r\n      let width = elem.getBoundingClientRect().width;\r\n      let adapted = false;\r\n      while (width > maxWidth) {\r\n        let str = text.text();\r\n        str = str.substring(0, str.length - 1);\r\n        text.text(str);\r\n        width = elem.getBoundingClientRect().width;\r\n        adapted = true;\r\n      }\r\n      if (adapted) {\r\n        let str = text.text();\r\n        str = str.substring(0, str.length - 3);\r\n        text.text(str + '...');\r\n      }\r\n    });\r\n  }\r\n}\r\n","import AbstractOutput from './AbstractOutput';\r\n\r\nconst ROOT_CLASS = 'geostyler-legend-renderer';\r\n\r\nfunction cssDimensionToPx(dimension: string | number): number {\r\n  if (typeof dimension === 'number') {\r\n    return dimension;\r\n  }\r\n  const div = document.createElement('div');\r\n  document.body.append(div);\r\n  div.style.height = dimension;\r\n  const height = parseFloat(getComputedStyle(div).height.replace(/px$/, ''));\r\n  div.remove();\r\n  return height;\r\n}\r\n\r\nexport default class PngOutput extends AbstractOutput {\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n\r\n  constructor(\r\n    size: [number, number],\r\n    maxColumnWidth: number | null,\r\n    maxColumnHeight: number | null,\r\n    private target?: HTMLElement,\r\n  ) {\r\n    super(size, maxColumnWidth, maxColumnHeight);\r\n    this.createCanvas(...size);\r\n  }\r\n\r\n  useContainer(title: string) {}\r\n\r\n  useRoot() {}\r\n\r\n  addTitle(text: string, x: number | string, y: number | string) {\r\n    this.context.fillText(text, cssDimensionToPx(x), cssDimensionToPx(y));\r\n  }\r\n\r\n  addLabel(text: string, x: number | string, y: number | string) {\r\n    this.context.fillText(text, cssDimensionToPx(x), cssDimensionToPx(y));\r\n  }\r\n\r\n  async addImage(\r\n    dataUrl: string,\r\n    imgWidth: number,\r\n    imgHeight: number,\r\n    x: number|string,\r\n    y: number|string,\r\n    drawRect: boolean,\r\n  ) {\r\n    const xPx = cssDimensionToPx(x);\r\n    const yPx = cssDimensionToPx(y);\r\n    this.expandHeight(yPx + imgHeight);\r\n    const image = new Image();\r\n    const imageLoaded = new Promise(resolve => image.onload = resolve);\r\n    image.src = dataUrl;\r\n    await imageLoaded;\r\n    this.context.drawImage(image, xPx, yPx, imgWidth, imgHeight);\r\n    if (drawRect) {\r\n      this.context.strokeStyle = '1px solid black';\r\n      this.context.strokeRect(xPx, yPx, imgWidth, imgHeight);\r\n    }\r\n  }\r\n\r\n  generate(finalHeight: number) {\r\n    return this.canvas;\r\n  }\r\n\r\n  private createCanvas(width: number, height: number) {\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.className = ROOT_CLASS;\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.context.font = '14px sans-serif';\r\n\r\n    if (this.target) {\r\n      this.target.querySelectorAll(`.${ROOT_CLASS}`).forEach(e => e.remove());\r\n      this.target.append(this.canvas);\r\n    }\r\n  }\r\n\r\n  private expandHeight(newHeight: number) {\r\n    if (this.canvas.height >= newHeight) {\r\n      return;\r\n    }\r\n    const oldCanvas = this.canvas;\r\n    this.createCanvas(this.canvas.width, newHeight);\r\n    this.context.drawImage(oldCanvas, 0, 0);\r\n  }\r\n}\r\n","import { boundingExtent } from 'ol/extent';\r\nimport OlGeometry from 'ol/geom/Geometry';\r\nimport OlGeomPoint from 'ol/geom/Point';\r\nimport OlGeomPolygon from 'ol/geom/Polygon';\r\nimport OlGeomLineString from 'ol/geom/LineString';\r\nimport OlStyle from 'ol/style/Style';\r\nimport Renderer from 'ol/render/canvas/Immediate';\r\nimport {\r\n  isRule,\r\n  isSymbolizer\r\n} from 'geostyler-style';\r\nimport { create as createTransform } from 'ol/transform';\r\nimport {\r\n  Style,\r\n  Symbolizer,\r\n  Rule\r\n} from 'geostyler-style/dist/style';\r\nimport OlStyleParser from 'geostyler-openlayers-parser/dist/OlStyleParser';\r\nimport OlFeature from 'ol/Feature';\r\nimport SvgOutput from './SvgOutput';\r\nimport AbstractOutput from './AbstractOutput';\r\nimport PngOutput from './PngOutput';\r\n\r\ninterface LegendItemConfiguration {\r\n  rule?: Rule;\r\n  title: string;\r\n}\r\n\r\ninterface LegendConfiguration {\r\n  items: LegendItemConfiguration[];\r\n  title: string;\r\n}\r\n\r\ninterface RemoteLegend {\r\n  url: string;\r\n  title: string;\r\n}\r\n\r\ninterface LegendsConfiguration {\r\n  styles?: Style[];\r\n  configs?: LegendItemConfiguration[];\r\n  remoteLegends?: RemoteLegend[];\r\n  size: [number, number];\r\n  maxColumnHeight?: number;\r\n  maxColumnWidth?: number;\r\n  overflow?: 'auto' | 'group';\r\n  hideRect?: boolean;\r\n}\r\n\r\nconst iconSize: [number, number] = [45, 30];\r\n\r\n/**\r\n * A class that can be used to render legends as images.\r\n */\r\nexport class LegendRenderer {\r\n\r\n  config: LegendsConfiguration | null = null;\r\n\r\n  /**\r\n   * Constructs a new legend renderer.\r\n   * @param {LegendsConfiguration} config the legend configuration\r\n   */\r\n  constructor(config: LegendsConfiguration) {\r\n    this.config = config;\r\n  }\r\n\r\n  /**\r\n   * Constructs a legend configuration from a geostyler style object.\r\n   * @param {Style} style a geostyler style\r\n   */\r\n  extractConfigFromStyle(style: Style) {\r\n    const config: LegendConfiguration = {\r\n      items: [],\r\n      title: ''\r\n    };\r\n    if (style.name) {\r\n      config.title = style.name;\r\n    }\r\n    style.rules.forEach(rule => {\r\n      config.items.push({\r\n        title: rule.name,\r\n        rule\r\n      });\r\n    });\r\n    return config;\r\n  }\r\n\r\n  /**\r\n   * Renders a single legend item.\r\n   * @param {AbstractOutput} output\r\n   * @param {LegendItemConfiguration} item configuration of the legend item\r\n   * @param {[number, number]} position the current position\r\n   */\r\n  renderLegendItem(\r\n    output: AbstractOutput,\r\n    item: LegendItemConfiguration,\r\n    position: [number, number]\r\n  ) {\r\n    if (!this.config) {\r\n      return;\r\n    }\r\n\r\n    const {\r\n      hideRect,\r\n      maxColumnHeight,\r\n      maxColumnWidth\r\n    } = this.config;\r\n\r\n    if (item.rule) {\r\n      output.useContainer(item.title);\r\n      return this.getRuleIcon(item.rule)\r\n        .then(async (uri) => {\r\n          await output.addImage(uri, ...iconSize, position[0] + 1, position[1], !hideRect);\r\n          output.addLabel(item.title, position[0] + iconSize[0] + 5, position[1] + 20);\r\n          position[1] += iconSize[1] + 5;\r\n          if (maxColumnHeight && position[1] + iconSize[1] + 5 >= maxColumnHeight) {\r\n            position[1] = 5;\r\n            position[0] += maxColumnWidth || 0;\r\n          }\r\n        })\r\n        .catch(() => {\r\n          return undefined;\r\n        });\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Constructs a geometry for rendering a specific symbolizer.\r\n   * @param {Symbolizer} symbolizer the symbolizer object\r\n   */\r\n  getGeometryForSymbolizer(symbolizer: Symbolizer): OlGeometry {\r\n    if (!isSymbolizer(symbolizer)) {\r\n      throw new Error('Invalid symbolizer');\r\n    }\r\n\r\n    const kind = symbolizer.kind;\r\n    switch (kind) {\r\n      case 'Mark':\r\n      case 'Icon':\r\n      case 'Text':\r\n        return new OlGeomPoint([iconSize[0] / 2, iconSize[1] / 2]);\r\n      case 'Fill':\r\n        return new OlGeomPolygon([[\r\n          [3, 3], [iconSize[0] - 3, 3], [iconSize[0] - 3, iconSize[1] - 3],\r\n          [3, iconSize[1] - 3], [3, 3]\r\n        ]]);\r\n      case 'Line':\r\n        return new OlGeomLineString([\r\n          [iconSize[0] / 6, iconSize[1] / 6],\r\n          [iconSize[0] / 3, iconSize[1] / 3 * 2],\r\n          [iconSize[0] / 2, iconSize[1] / 3],\r\n          [iconSize[0] / 6 * 5, iconSize[1] / 6 * 5]\r\n        ]);\r\n      default:\r\n        return new OlGeomPoint([iconSize[0] / 2, iconSize[1] / 2]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a promise resolving to a data uri with the appropriate rule icon.\r\n   * @param {Object} rule the geostyler rule\r\n   */\r\n  getRuleIcon(rule: Rule): Promise<string> {\r\n    if (!isRule(rule)) {\r\n      return Promise.reject('Invalid rule');\r\n    }\r\n\r\n    const canvas = document.createElement('canvas');\r\n    canvas.setAttribute('width', `${iconSize[0]}`);\r\n    canvas.setAttribute('height', `${iconSize[1]}`);\r\n    const extent = boundingExtent([[0, 0], [iconSize[0], iconSize[1]]]);\r\n    const pixelRatio = 1;\r\n    const context = canvas.getContext('2d');\r\n    const transform = createTransform();\r\n    const renderer = new Renderer(context as CanvasRenderingContext2D, pixelRatio, extent, transform, 0);\r\n    const geoms: OlGeometry[] = [];\r\n\r\n    rule.symbolizers.forEach(symbolizer => geoms.push(this.getGeometryForSymbolizer(symbolizer)));\r\n\r\n    const styleParser = new OlStyleParser();\r\n\r\n    const style = {\r\n      name: '',\r\n      rules: [{\r\n        name: '',\r\n        symbolizers: rule.symbolizers\r\n      }]\r\n    };\r\n    return new Promise(async (resolve, reject) => {\r\n      function drawGeoms(){\r\n        geoms.forEach((geom: OlGeometry) => renderer.drawGeometry(geom));\r\n      }\r\n      try {\r\n        let { output: olStyle, errors = [] } = await styleParser.writeStyle(style);\r\n        if (errors.length > 0) {\r\n          reject(errors[0]);\r\n        }\r\n        if (typeof olStyle == 'function') {\r\n          olStyle = <OlStyle | OlStyle[]>olStyle(new OlFeature(geoms[0]), 1);\r\n        }\r\n        if (Array.isArray(olStyle)) {\r\n          olStyle.forEach((styleItem: OlStyle) => {\r\n            renderer.setStyle(styleItem);\r\n            drawGeoms();\r\n          });\r\n        } else {\r\n          // @ts-expect-error TODO fix type errors\r\n          renderer.setStyle(olStyle);\r\n          drawGeoms();\r\n        }\r\n        resolve(canvas.toDataURL('image/png'));\r\n      } catch (error) {\r\n        reject();\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Render a single legend.\r\n   * @param {LegendConfiguration} config the legend config\r\n   * @param {AbstractOutput} output\r\n   * @param {[number, number]} position the current position\r\n   */\r\n  renderLegend(\r\n    config: LegendConfiguration,\r\n    output: AbstractOutput,\r\n    position: [number, number]\r\n  ) {\r\n    if (!this.config) {\r\n      return;\r\n    }\r\n    output.useRoot();\r\n    if (this.config.overflow !== 'auto' && position[0] !== 0) {\r\n      const legendHeight = config.items.length * (iconSize[1] + 5) + 20;\r\n      // @ts-expect-error TODO fix type errors\r\n      if (legendHeight + position[1] > this.config.maxColumnHeight) {\r\n      // @ts-expect-error TODO fix type errors\r\n        position[0] += this.config.maxColumnWidth;\r\n        position[1] = 0;\r\n      }\r\n    }\r\n    if (config.title) {\r\n      output.addTitle(config.title, position[0], position[1] === 0 ? '1em': position[1] + 15);\r\n      position[1] += 20;\r\n    }\r\n\r\n    return config.items.reduce((cur, item) => {\r\n      return cur.then(() => this.renderLegendItem(output, item, position));\r\n    }, Promise.resolve());\r\n  }\r\n\r\n  /**\r\n   * Render all images given by URL and append them to the legend\r\n   * @param {RemoteLegend[]} remoteLegends the array of remote legend objects\r\n   * @param {AbstractOutput} output\r\n   * @param {[number, number]} position the current position\r\n   */\r\n  async renderImages(\r\n    remoteLegends: RemoteLegend[],\r\n    output: AbstractOutput,\r\n    position: [number, number]\r\n  ) {\r\n    const legendSpacing = 20;\r\n    const titleSpacing = 5;\r\n    for (let i = 0; i < remoteLegends.length; i++) {\r\n      const legendUrl = remoteLegends[i].url;\r\n      const legendTitle = remoteLegends[i].title;\r\n      try {\r\n        const response = await fetch(legendUrl);\r\n        const blob = await response.blob();\r\n        const readBlob = async (imageBlob: Blob): Promise<string | ArrayBuffer> => {\r\n          return new Promise((resolve, reject) => {\r\n            try {\r\n              const fileReader = new FileReader();\r\n              fileReader.onload = async (e) => {\r\n                // @ts-expect-error TODO fix type errors\r\n                const result = e.target.result;\r\n                // @ts-expect-error TODO fix type errors\r\n                resolve(result) ;\r\n              };\r\n              fileReader.readAsDataURL(imageBlob) ;\r\n            } catch (e) {\r\n              reject(e);\r\n            }\r\n          });\r\n        };\r\n        const base64 = await readBlob(blob);\r\n\r\n        let img: HTMLImageElement = new Image();\r\n        img.src = base64.toString();\r\n        await img.decode();\r\n\r\n        // @ts-expect-error TODO fix type errors\r\n        if (this.config.overflow === 'auto' &&\r\n            img.height + legendSpacing + titleSpacing +\r\n            // @ts-expect-error TODO fix type errors\r\n            position[1] > this.config.maxColumnHeight) {\r\n          // @ts-expect-error TODO fix type errors\r\n          position[0] += this.config.maxColumnWidth;\r\n          position[1] = 0;\r\n        }\r\n        if (legendTitle) {\r\n          output.useRoot();\r\n          position[1] += legendSpacing;\r\n          output.addTitle(legendTitle, ...position);\r\n          position[1] += titleSpacing;\r\n        }\r\n        await output.addImage(base64.toString(), img.width, img.height,...position, false);\r\n\r\n        position[1] += img.height;\r\n      } catch (err) {\r\n        // eslint-disable-next-line no-console\r\n        console.error('Error on fetching legend: ', err);\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n\r\n  async renderAsImage(format?: 'svg' | 'png', target?: HTMLElement): Promise<Element> {\r\n    if (!this.config) {\r\n      return Promise.reject();\r\n    }\r\n    const {\r\n      styles,\r\n      configs,\r\n      size: [width, height],\r\n      remoteLegends,\r\n      maxColumnWidth,\r\n      maxColumnHeight,\r\n    } = this.config;\r\n    const legends: LegendConfiguration[] = [];\r\n    if (styles) {\r\n      styles.forEach(style => legends.push(this.extractConfigFromStyle(style)));\r\n    }\r\n    if (configs) {\r\n      legends.unshift.apply(legends, configs);\r\n    }\r\n    const outputClass = format === 'svg' ? SvgOutput : PngOutput;\r\n    const output = new outputClass([width, height], maxColumnWidth || 0, maxColumnHeight || 0, target);\r\n    const position: [number, number] = [0, 0];\r\n    for (let i = 0; i < legends.length; i++) {\r\n      await this.renderLegend(legends[i], output, position);\r\n    }\r\n    if (remoteLegends) {\r\n      await this.renderImages(remoteLegends, output, position);\r\n    }\r\n    return output.generate(position[1]);\r\n  }\r\n\r\n  /**\r\n   * Renders the configured legend as an SVG or PNG image in the given target container. All pre-existing legends\r\n   * will be removed.\r\n   * @param {HTMLElement} target a node to append the svg to\r\n   * @param format\r\n   * @return {SVGSVGElement} The final SVG legend\r\n   */\r\n  async render(target: HTMLElement, format: 'svg' | 'png' = 'svg') {\r\n    await this.renderAsImage(format, target);\r\n  }\r\n}\r\nexport default LegendRenderer;\r\n"],"names":["Relationship","boundingExtent","coordinates","extent","createEmpty","i","ii","extendCoordinate","closestSquaredDistanceXY","x","y","dx","dy","containsExtent","extent1","extent2","containsXY","coordinateRelationship","coordinate","minX","minY","maxX","maxY","relationship","createOrUpdate","dest","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getCenter","getHeight","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","BaseEvent","type","ObjectEventType","Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","extend","arr","data","extension","length","equals","arr1","arr2","len1","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","pr","index","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","len","keys","unByKey","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","assert","assertion","errorMessage","tmp_","create","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","set","transform","c","d","e","f","scale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","METERS_PER_UNIT","Projection","options","global","tileGrid","worldExtent","func","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","code","resolution","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","projection","transforms","destination","transformFn","sourceCode","destinationCode","clamp","min","max","squaredSegmentDistance","x1","y1","x2","y2","t","squaredDistance","lerp","toFixed","decimals","factor","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","getTransformFromProjections","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","j","rotate","anchor","anchorX","anchorY","deltaX","deltaY","k","translate","tmpTransform","createTransform","Geometry","revision","squaredTolerance","clone","closestPoint","minSquaredDistance","coord","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","ends","jj","Point","squaredDx","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","n","markers","stack","last","first","maxSquaredDistance","snap","quantize","x3","y3","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","linearRing","twiceArea","linearRings","area","LinearRing","linearRingArea","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","r","rr","pointX","maxSegmentLength","segmentLength","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","tmp","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","Polygon","polygon","linearRingsArea","flatCenter","interpolatePoint","fraction","cumulativeLengths","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","m1","lineStringLength","LineString","lineString","VectorContext","geometry","feature","renderer","hitDetectionRenderer","style","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","strokeStyle","imageStyle","declutterImageWithText","textStyle","OlImageState","ua","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","passive","createCanvasContext2D","width","height","canvasPool","settings","canvas","sharedCanvasContext","getSharedCanvasContext2D","rgb","xyz","_xyz","white","z","g","luv","arg","o","_u","_v","l","u","v","xn","yn","zn","un","vn","yr","hr","h","names","baseHues","parse","cstr","parts","alpha","space","base","size","isShort","name","dims","_b","_a","hsl","s","t1","t2","t3","delta","rgba","color","parsed","asString","toString","MAX_CACHE_SIZE","cacheSize","fromString","parseRgba","normalize","asArray","load","image","src","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","IconImageCache","iconImage","crossOrigin","getCacheKey","pattern","update","ImageState","maxCacheSize","colorString","shared","taintedTestContext","IconImage","imageState","pixelRatio","context","ctx","onChange","cacheKey","iconImageCache","asColorLike","asCanvasPattern","iconCache","canvasPattern","patternCanvasContext","getIconImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultLineWidth","CanvasImmediateRenderer","viewRotation","userTransform","pixelCoordinates","localTransform","rotation","centerX","centerY","close","radius","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","endss","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","lineDash","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","str","isNumber","num","isBoolean","bool","isExpression","got","isGeoStylerFunction","isPropertyType","isScaleDenominator","isGeoStylerNumberFunction","isComparisonOperator","isCombinationOperator","isNegationOperator","isFilter","isComparisonFilter","isCombinationFilter","isGeoStylerBooleanFunction","isNegationFilter","expectedLength","isSymbolizer","isPointSymbolizer","isLineSymbolizer","isFillSymbolizer","isRasterSymbolizer","isIconSymbolizer","isMarkSymbolizer","isTextSymbolizer","isRule","isGeoStylerStringFunction","isGeoStylerUnknownFunction","isSprite","toSize","ImageStyle","displacement","opacity","rotateWithView","RegularShape","fill","renderOptions","stroke","lineJoin","strokeWidth","miterLimit","r1","r2","points","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","lineCap","lineDashOffset","maxRadius","radius2","startAngle","step","angle0","radiusC","CircleStyle","Fill","patternImage","Stroke","Style","defaultGeometryFunction","text","zIndex","DEFAULT_FILL_COLOR","Text","overflow","font","maxAngle","offsetX","offsetY","placement","repeat","justify","textBaseline","padding","calculateScale","wantedWidth","wantedHeight","Icon","onload","iconImageSize","colors","WELLKNOWNNAME_TTF_REGEXP","DUMMY_MARK_SYMBOLIZER_FONT","OlStyleUtil","rgbaColor","colorsOnly","red","green","blue","inColor","colorArr","rgbColorArr","idx","hex","symbolizer","fontWeight","fontStyle","search","fontFamily","olFont","template","noValueFoundText","valueAdjust","attributeTemplatePrefix","attributeTemplateSuffix","regExp","regExpRes","res","noMatchCnt","args","result","regexArray","caseArgs","match","caseArg","splitStr","part","rule","filterHasFunction","styleHasFunction","scaleDenominatorHasFunction","_c","_d","toContext","scaleTransform","OlStyleParser","ol","__publicField","OlStyle","OlStyleImage","OlStyleFill","OlStyleStroke","OlStyleText","OlStyleCircle","OlStyleIcon","OlStyleRegularshape","olStyle","pointSymbolizer","olCircleStyle","olFillStyle","olStrokeStyle","olRegularStyle","markSymbolizer","olTextStyle","char","fontName","olIconStyle","position","offsetOrigin","dashArray","outlineDashArray","allowOverlap","label","fontSize","fontObj","parseFont","fontFamilies","olStyles","symbolizers","styleType","geoStylerStyle","unsupportedProperties","error","clonedStyle","capitalizeFirstLetter","rules","hasFilter","hasMinScale","_e","hasMaxScale","_h","_g","_f","hasScaleDenominator","hasFunctions","nrSymbolizers","hasTextSymbolizer","hasDynamicIconSymbolizer","olSymbolizer","olStyleFct","styles","dpi","mpu","minScale","maxScale","isWithinScale","matchesFilter","symb","styleFromFct","filter","operatorMapping","operator","isNestedFilter","intermediate","restFilter","arg1","arg2","strokeColor","strokeOpacity","sColor","fillOpacity","fColor","dimensions","shapeOpts","iconOpts","markerSVG","feat","baseProps","prefix","suffix","outlineColor","outlineOpacity","oColor","graphicFill","graphicFillStyle","graphicFillImage","graphicFillStyleCloned","imageCloned","tmpCanvas","tmpContext","vectorContext","pointCoords","item","OlGeomPoint","haloColor","haloWidth","Feature","geometryOrProperties","properties","createStyleFunction","id","xhtml","namespaces","namespace","creatorInherit","document","uri","creatorFixed","fullname","creator","none","selector","selection_select","select","groups","subgroups","group","subgroup","node","subnode","Selection","array","empty","selectorAll","arrayAll","selection_selectAll","parents","matcher","childMatcher","find","childFind","childFirst","selection_selectChild","children","childrenFilter","selection_selectChildren","selection_filter","sparse","selection_enter","EnterNode","parent","datum","child","next","constant","bindIndex","enter","exit","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyValue","selection_data","bind","enterGroup","updateGroup","exitGroup","i0","i1","previous","selection_exit","selection_join","onenter","onupdate","onexit","selection_merge","selection","groups0","groups1","merges","group0","group1","merge","selection_order","selection_sort","compare","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","attrRemoveNS","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","selection_attr","defaultView","styleRemove","styleConstant","priority","styleFunction","selection_style","styleValue","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","string","classList","ClassList","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","textRemove","textConstant","textFunction","selection_text","htmlRemove","htmlConstant","htmlFunction","selection_html","raise","selection_raise","lower","selection_lower","selection_append","constantNull","selection_insert","before","remove","selection_remove","selection_cloneShallow","selection_cloneDeep","selection_clone","deep","selection_datum","contextListener","parseTypenames","typenames","onRemove","typename","on","onAdd","selection_on","dispatchEvent","params","window","dispatchConstant","dispatchFunction","selection_dispatch","selection_iterator","root","selection_selection","AbstractOutput","maxColumnWidth","maxColumnHeight","ROOT_CLASS","SvgOutput","svg","title","dataUrl","imgWidth","imgHeight","drawRect","finalHeight","nodes","maxWidth","elem","adapted","cssDimensionToPx","div","PngOutput","xPx","yPx","imageLoaded","newHeight","oldCanvas","iconSize","LegendRenderer","config","hideRect","OlGeomPolygon","OlGeomLineString","Renderer","geoms","styleParser","drawGeoms","geom","errors","OlFeature","styleItem","cur","remoteLegends","legendUrl","legendTitle","blob","base64","imageBlob","fileReader","img","err","format","configs","legends","outputClass"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124]}