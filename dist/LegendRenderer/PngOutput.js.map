{"version":3,"file":"PngOutput.js","sourceRoot":"","sources":["../../src/LegendRenderer/PngOutput.ts"],"names":[],"mappings":"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","sourcesContent":["import AbstractOutput from './AbstractOutput';\r\n\r\nconst ROOT_CLASS = 'geostyler-legend-renderer';\r\n\r\nfunction cssDimensionToPx(dimension: string | number): number {\r\n  if (typeof dimension === 'number') {\r\n    return dimension;\r\n  }\r\n  const div = document.createElement('div');\r\n  document.body.append(div);\r\n  div.style.height = dimension;\r\n  const height = parseFloat(getComputedStyle(div).height.replace(/px$/, ''));\r\n  div.remove();\r\n  return height;\r\n}\r\n\r\nexport default class PngOutput extends AbstractOutput {\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n\r\n  constructor(\r\n    size: [number, number],\r\n    maxColumnWidth: number | null,\r\n    maxColumnHeight: number | null,\r\n    private target?: HTMLElement,\r\n  ) {\r\n    super(size, maxColumnWidth, maxColumnHeight);\r\n    this.createCanvas(...size);\r\n  }\r\n\r\n  useContainer(title: string) {}\r\n\r\n  useRoot() {}\r\n\r\n  addTitle(text: string, x: number | string, y: number | string) {\r\n    this.context.fillText(text, cssDimensionToPx(x), cssDimensionToPx(y));\r\n  }\r\n\r\n  addLabel(text: string, x: number | string, y: number | string) {\r\n    this.context.fillText(text, cssDimensionToPx(x), cssDimensionToPx(y));\r\n  }\r\n\r\n  async addImage(\r\n    dataUrl: string,\r\n    imgWidth: number,\r\n    imgHeight: number,\r\n    x: number|string,\r\n    y: number|string,\r\n    drawRect: boolean,\r\n  ) {\r\n    const xPx = cssDimensionToPx(x);\r\n    const yPx = cssDimensionToPx(y);\r\n    this.expandHeight(yPx + imgHeight);\r\n    const image = new Image();\r\n    const imageLoaded = new Promise(resolve => image.onload = resolve);\r\n    image.src = dataUrl;\r\n    await imageLoaded;\r\n    this.context.drawImage(image, xPx, yPx, imgWidth, imgHeight);\r\n    if (drawRect) {\r\n      this.context.strokeStyle = '1px solid black';\r\n      this.context.strokeRect(xPx, yPx, imgWidth, imgHeight);\r\n    }\r\n  }\r\n\r\n  generate(finalHeight: number) {\r\n    return this.canvas;\r\n  }\r\n\r\n  private createCanvas(width: number, height: number) {\r\n    this.canvas = document.createElement('canvas');\r\n    this.canvas.className = ROOT_CLASS;\r\n    this.canvas.width = width;\r\n    this.canvas.height = height;\r\n    this.context = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.context.font = '14px sans-serif';\r\n\r\n    if (this.target) {\r\n      this.target.querySelectorAll(`.${ROOT_CLASS}`).forEach(e => e.remove());\r\n      this.target.append(this.canvas);\r\n    }\r\n  }\r\n\r\n  private expandHeight(newHeight: number) {\r\n    if (this.canvas.height >= newHeight) {\r\n      return;\r\n    }\r\n    const oldCanvas = this.canvas;\r\n    this.createCanvas(this.canvas.width, newHeight);\r\n    this.context.drawImage(oldCanvas, 0, 0);\r\n  }\r\n}\r\n"]}